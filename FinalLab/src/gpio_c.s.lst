   1              	# file: gpio_c.s
   2              	# team w4
   3              	# author: Justin Johnson, Tyler French
   4              	
   5              	.include "macros.inc"
   1              	# file: macros.inc
   2              	
  34              	  .list
   6              	.include "src/gpio_regs.inc"
   1              	# file: gpio_regs.inc
   2              	# team w4
   3              	# author: Justin Johnson, Tyler French
   4              	
   5              		.equ GPIOA_BASE, 0x40020000
   6              		.equ GPIOB_BASE, 0x40020400
   7              		.equ GPIOC_BASE, 0x40020800
   8              		.equ GPIOD_BASE, 0x40020c00
   9              		.equ GPIOE_BASE, 0x40021000
  10              	
  11              		.equ GPIO_MODER, 0x00
  12              		.equ GPIO_OTYPER, 0x04
  13              		.equ GPIO_OSPEEDR, 0x08
  14              		.equ GPIO_PUPDR, 0x0c
  15              		.equ GPIO_IDR, 0x10
  16              		.equ GPIO_ODR, 0x14
  17              		.equ GPIO_BSRR, 0x18
  18              		.equ GPIO_LCKR, 0x1c
  19              		.equ GPIO_AFRL, 0x20
  20              		.equ GPIO_AFRH, 0x24
  21              	
  22              	
   7              	
   8              	  SET_TARGET
   9              	
  10              	  .text
  11              	
  12              	  FUNCTION gpio_c_init,global
  13              	
  14 0000 00B5     	    push {lr}
  15              	
  16 0002 4FF00200 			mov r0,#2						//send 2 as arg to rcc function
  17 0006 FFF7FEFF 			bl rcc_gpio_enable				//call rcc function
  18              	
  19 000a 054B     			ldr r3, =#GPIOC_BASE			//load r3 with the base address of PORT C
  20              	
  21 000c 054A     			ldr r2, =#0x00000000			//load 0 into r2
  22 000e DA60     			str r2,[r3,#GPIO_PUPDR]			//write Port C PUPDR register as no pull-up, no pull-down
  23 0010 1A60     			str r2,[r3,#GPIO_MODER]			//write Port C MODER register as input
  24 0012 5A60     			str r2,[r3,#GPIO_OTYPER]		//write Port C OTYPER register as reset state
  25              	
  26 0014 044A     			ldr r2,=#0xffffffff				//load all ones into r2
  27 0016 9A60     			str r2,[r3,#GPIO_OSPEEDR]		//set Port C SPEEDR register as high speed
  28              	
  29 0018 5DF804EB 			pop {lr}
  30              	
  31 001c 7047     	    bx lr
  32              	  
  33 001e 00000008 	  ENDFUNC gpio_c_init
  33      02400000 
  33      0000FFFF 
  33      FFFF
  34              	
  35              	  FUNCTION gpio_c_get,global
  36              	
  37 002c 00B5     			push {lr}
  38              	
  39 002e 024B     			ldr r3,=#GPIOC_BASE			//load r3 with the base address of Port C
  40              	
  41 0030 1869     			ldr r0,[r3,#GPIO_IDR]		//load r0 with the GPIO Port C input data register
  42              	
  43 0032 5DF804EB 			pop {lr}
  44              	
  45 0036 7047     			bx lr
  46              	
  47 0038 00080240 		ENDFUNC gpio_c_get
  48              	
  49              	  .data
  50              	
  51              	  .end
DEFINED SYMBOLS
                            *ABS*:00000001 ctxm4
 ./src/gpio_regs.inc:5      *ABS*:40020000 GPIOA_BASE
 ./src/gpio_regs.inc:6      *ABS*:40020400 GPIOB_BASE
 ./src/gpio_regs.inc:7      *ABS*:40020800 GPIOC_BASE
 ./src/gpio_regs.inc:8      *ABS*:40020c00 GPIOD_BASE
 ./src/gpio_regs.inc:9      *ABS*:40021000 GPIOE_BASE
 ./src/gpio_regs.inc:11     *ABS*:00000000 GPIO_MODER
 ./src/gpio_regs.inc:12     *ABS*:00000004 GPIO_OTYPER
 ./src/gpio_regs.inc:13     *ABS*:00000008 GPIO_OSPEEDR
 ./src/gpio_regs.inc:14     *ABS*:0000000c GPIO_PUPDR
 ./src/gpio_regs.inc:15     *ABS*:00000010 GPIO_IDR
 ./src/gpio_regs.inc:16     *ABS*:00000014 GPIO_ODR
 ./src/gpio_regs.inc:17     *ABS*:00000018 GPIO_BSRR
 ./src/gpio_regs.inc:18     *ABS*:0000001c GPIO_LCKR
 ./src/gpio_regs.inc:19     *ABS*:00000020 GPIO_AFRL
 ./src/gpio_regs.inc:20     *ABS*:00000024 GPIO_AFRH
        src/gpio_c.s:12     .text:00000000 gpio_c_init
        src/gpio_c.s:12     .text:00000000 $t
        src/gpio_c.s:33     .text:0000001e $d
        src/gpio_c.s:35     .text:0000002c gpio_c_get
        src/gpio_c.s:35     .text:0000002c $t
        src/gpio_c.s:47     .text:00000038 $d
                   .debug_aranges:0000000c $d

UNDEFINED SYMBOLS
rcc_gpio_enable
