
bin/adc.elf:     file format elf32-littlearm


Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000438 	.word	0x20000438
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08001130 	.word	0x08001130

080001ac <frame_dummy>:
 80001ac:	4b08      	ldr	r3, [pc, #32]	; (80001d0 <frame_dummy+0x24>)
 80001ae:	b510      	push	{r4, lr}
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4808      	ldr	r0, [pc, #32]	; (80001d4 <frame_dummy+0x28>)
 80001b4:	4908      	ldr	r1, [pc, #32]	; (80001d8 <frame_dummy+0x2c>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	4808      	ldr	r0, [pc, #32]	; (80001dc <frame_dummy+0x30>)
 80001bc:	6803      	ldr	r3, [r0, #0]
 80001be:	b903      	cbnz	r3, 80001c2 <frame_dummy+0x16>
 80001c0:	bd10      	pop	{r4, pc}
 80001c2:	4b07      	ldr	r3, [pc, #28]	; (80001e0 <frame_dummy+0x34>)
 80001c4:	2b00      	cmp	r3, #0
 80001c6:	d0fb      	beq.n	80001c0 <frame_dummy+0x14>
 80001c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80001cc:	4718      	bx	r3
 80001ce:	bf00      	nop
 80001d0:	00000000 	.word	0x00000000
 80001d4:	08001130 	.word	0x08001130
 80001d8:	2000043c 	.word	0x2000043c
 80001dc:	20000438 	.word	0x20000438
 80001e0:	00000000 	.word	0x00000000

080001e4 <main>:

// gpio_d_init() prototype declaration goes here!
void gpio_d_init(void);

int main(void)
{
 80001e4:	b5b0      	push	{r4, r5, r7, lr}
 80001e6:	b096      	sub	sp, #88	; 0x58
 80001e8:	af00      	add	r7, sp, #0
  adc_init();                   // Initialize the ADC hardware
 80001ea:	f000 f935 	bl	8000458 <adc_init>
  seg7_init();                  // Initialize the 7 segment display
 80001ee:	f000 fa23 	bl	8000638 <seg7_init>
  gpio_d_init();                // Initialize the GPIO Port D as outputs (output(15-0) = off)
 80001f2:	f000 f9b7 	bl	8000564 <gpio_d_init>
  uint32_t segs[] = {0x40, 0x79, 0x24, 0x30, 0x19, 0x12, 0x02, 0x78, 0x00, 0x10, 0x08, 0x03, 0x46, 0x21, 0x06, 0x0e};   // set up array of 7 segment data to display decimal digits 
 80001f6:	4b90      	ldr	r3, [pc, #576]	; (8000438 <main+0x254>)
 80001f8:	1d3c      	adds	r4, r7, #4
 80001fa:	461d      	mov	r5, r3
 80001fc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80001fe:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000200:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000202:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000204:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8000206:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8000208:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800020c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}

  while(1) {
    uint32_t q = 0;             // Initialize any variables needed
 8000210:	2300      	movs	r3, #0
 8000212:	657b      	str	r3, [r7, #84]	; 0x54
    
    adc_start();                // Start ADC
 8000214:	f000 f966 	bl	80004e4 <adc_start>
    
    while (!adc_done()) {
 8000218:	e002      	b.n	8000220 <main+0x3c>
      q = q +1;
 800021a:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800021c:	3301      	adds	r3, #1
 800021e:	657b      	str	r3, [r7, #84]	; 0x54
  while(1) {
    uint32_t q = 0;             // Initialize any variables needed
    
    adc_start();                // Start ADC
    
    while (!adc_done()) {
 8000220:	f000 f970 	bl	8000504 <adc_done>
 8000224:	4603      	mov	r3, r0
 8000226:	f083 0301 	eor.w	r3, r3, #1
 800022a:	b2db      	uxtb	r3, r3
 800022c:	2b00      	cmp	r3, #0
 800022e:	d1f4      	bne.n	800021a <main+0x36>
      q = q +1;
                                // Wait in a tight loop for ADC conversion to finish
    }
    uint32_t val = adc_get();   // ADC is done; get ADC value (12 bits right justified)
 8000230:	f000 f97c 	bl	800052c <adc_get>
 8000234:	6538      	str	r0, [r7, #80]	; 0x50
    // Use ADC value (0 - 4095) to write 7 seg display

    // call seg7_put() for each digit in 7 segment display

    int index;      //index into segs array
    long double vRes = 3.0/4096;
 8000236:	f04f 0200 	mov.w	r2, #0
 800023a:	4b80      	ldr	r3, [pc, #512]	; (800043c <main+0x258>)
 800023c:	e9c7 2312 	strd	r2, r3, [r7, #72]	; 0x48

    // HEX7 is always blank
    seg7_put(0x7, 0x7f);
 8000240:	2007      	movs	r0, #7
 8000242:	217f      	movs	r1, #127	; 0x7f
 8000244:	f000 fa28 	bl	8000698 <seg7_put>
    // HEX6 is volts
    index = (val*vRes);
 8000248:	6d38      	ldr	r0, [r7, #80]	; 0x50
 800024a:	f000 fb81 	bl	8000950 <__aeabi_ui2d>
 800024e:	4602      	mov	r2, r0
 8000250:	460b      	mov	r3, r1
 8000252:	4610      	mov	r0, r2
 8000254:	4619      	mov	r1, r3
 8000256:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 800025a:	f000 fbef 	bl	8000a3c <__aeabi_dmul>
 800025e:	4602      	mov	r2, r0
 8000260:	460b      	mov	r3, r1
 8000262:	4610      	mov	r0, r2
 8000264:	4619      	mov	r1, r3
 8000266:	f000 fdfb 	bl	8000e60 <__aeabi_d2iz>
 800026a:	4603      	mov	r3, r0
 800026c:	647b      	str	r3, [r7, #68]	; 0x44
    index = index%10;
 800026e:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8000270:	4b73      	ldr	r3, [pc, #460]	; (8000440 <main+0x25c>)
 8000272:	fb83 1302 	smull	r1, r3, r3, r2
 8000276:	1099      	asrs	r1, r3, #2
 8000278:	17d3      	asrs	r3, r2, #31
 800027a:	1ac9      	subs	r1, r1, r3
 800027c:	460b      	mov	r3, r1
 800027e:	009b      	lsls	r3, r3, #2
 8000280:	440b      	add	r3, r1
 8000282:	005b      	lsls	r3, r3, #1
 8000284:	1ad3      	subs	r3, r2, r3
 8000286:	647b      	str	r3, [r7, #68]	; 0x44
    seg7_put(0x6, segs[index]);
 8000288:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800028a:	009b      	lsls	r3, r3, #2
 800028c:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8000290:	4413      	add	r3, r2
 8000292:	f853 3c54 	ldr.w	r3, [r3, #-84]
 8000296:	2006      	movs	r0, #6
 8000298:	4619      	mov	r1, r3
 800029a:	f000 f9fd 	bl	8000698 <seg7_put>
    // HEX5 is tenths of volts
    index = ((val*vRes)*10);
 800029e:	6d38      	ldr	r0, [r7, #80]	; 0x50
 80002a0:	f000 fb56 	bl	8000950 <__aeabi_ui2d>
 80002a4:	4602      	mov	r2, r0
 80002a6:	460b      	mov	r3, r1
 80002a8:	4610      	mov	r0, r2
 80002aa:	4619      	mov	r1, r3
 80002ac:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 80002b0:	f000 fbc4 	bl	8000a3c <__aeabi_dmul>
 80002b4:	4602      	mov	r2, r0
 80002b6:	460b      	mov	r3, r1
 80002b8:	4610      	mov	r0, r2
 80002ba:	4619      	mov	r1, r3
 80002bc:	f04f 0200 	mov.w	r2, #0
 80002c0:	4b60      	ldr	r3, [pc, #384]	; (8000444 <main+0x260>)
 80002c2:	f000 fbbb 	bl	8000a3c <__aeabi_dmul>
 80002c6:	4602      	mov	r2, r0
 80002c8:	460b      	mov	r3, r1
 80002ca:	4610      	mov	r0, r2
 80002cc:	4619      	mov	r1, r3
 80002ce:	f000 fdc7 	bl	8000e60 <__aeabi_d2iz>
 80002d2:	4603      	mov	r3, r0
 80002d4:	647b      	str	r3, [r7, #68]	; 0x44
    index = index%10;
 80002d6:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80002d8:	4b59      	ldr	r3, [pc, #356]	; (8000440 <main+0x25c>)
 80002da:	fb83 1302 	smull	r1, r3, r3, r2
 80002de:	1099      	asrs	r1, r3, #2
 80002e0:	17d3      	asrs	r3, r2, #31
 80002e2:	1ac9      	subs	r1, r1, r3
 80002e4:	460b      	mov	r3, r1
 80002e6:	009b      	lsls	r3, r3, #2
 80002e8:	440b      	add	r3, r1
 80002ea:	005b      	lsls	r3, r3, #1
 80002ec:	1ad3      	subs	r3, r2, r3
 80002ee:	647b      	str	r3, [r7, #68]	; 0x44
    seg7_put(0x5, segs[index]);
 80002f0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80002f2:	009b      	lsls	r3, r3, #2
 80002f4:	f107 0258 	add.w	r2, r7, #88	; 0x58
 80002f8:	4413      	add	r3, r2
 80002fa:	f853 3c54 	ldr.w	r3, [r3, #-84]
 80002fe:	2005      	movs	r0, #5
 8000300:	4619      	mov	r1, r3
 8000302:	f000 f9c9 	bl	8000698 <seg7_put>
    // HEX4 is hundredths of volts
    index = ((val*vRes)*100);
 8000306:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8000308:	f000 fb22 	bl	8000950 <__aeabi_ui2d>
 800030c:	4602      	mov	r2, r0
 800030e:	460b      	mov	r3, r1
 8000310:	4610      	mov	r0, r2
 8000312:	4619      	mov	r1, r3
 8000314:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8000318:	f000 fb90 	bl	8000a3c <__aeabi_dmul>
 800031c:	4602      	mov	r2, r0
 800031e:	460b      	mov	r3, r1
 8000320:	4610      	mov	r0, r2
 8000322:	4619      	mov	r1, r3
 8000324:	f04f 0200 	mov.w	r2, #0
 8000328:	4b47      	ldr	r3, [pc, #284]	; (8000448 <main+0x264>)
 800032a:	f000 fb87 	bl	8000a3c <__aeabi_dmul>
 800032e:	4602      	mov	r2, r0
 8000330:	460b      	mov	r3, r1
 8000332:	4610      	mov	r0, r2
 8000334:	4619      	mov	r1, r3
 8000336:	f000 fd93 	bl	8000e60 <__aeabi_d2iz>
 800033a:	4603      	mov	r3, r0
 800033c:	647b      	str	r3, [r7, #68]	; 0x44
    index = index%10;
 800033e:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8000340:	4b3f      	ldr	r3, [pc, #252]	; (8000440 <main+0x25c>)
 8000342:	fb83 1302 	smull	r1, r3, r3, r2
 8000346:	1099      	asrs	r1, r3, #2
 8000348:	17d3      	asrs	r3, r2, #31
 800034a:	1ac9      	subs	r1, r1, r3
 800034c:	460b      	mov	r3, r1
 800034e:	009b      	lsls	r3, r3, #2
 8000350:	440b      	add	r3, r1
 8000352:	005b      	lsls	r3, r3, #1
 8000354:	1ad3      	subs	r3, r2, r3
 8000356:	647b      	str	r3, [r7, #68]	; 0x44
    seg7_put(0x4, segs[index]);
 8000358:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800035a:	009b      	lsls	r3, r3, #2
 800035c:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8000360:	4413      	add	r3, r2
 8000362:	f853 3c54 	ldr.w	r3, [r3, #-84]
 8000366:	2004      	movs	r0, #4
 8000368:	4619      	mov	r1, r3
 800036a:	f000 f995 	bl	8000698 <seg7_put>

    // HEX3 is thousands digit of decimal ADC count
    index = (val/1000)%10;
 800036e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8000370:	4a36      	ldr	r2, [pc, #216]	; (800044c <main+0x268>)
 8000372:	fba2 2303 	umull	r2, r3, r2, r3
 8000376:	0999      	lsrs	r1, r3, #6
 8000378:	4b35      	ldr	r3, [pc, #212]	; (8000450 <main+0x26c>)
 800037a:	fba3 2301 	umull	r2, r3, r3, r1
 800037e:	08da      	lsrs	r2, r3, #3
 8000380:	4613      	mov	r3, r2
 8000382:	009b      	lsls	r3, r3, #2
 8000384:	4413      	add	r3, r2
 8000386:	005b      	lsls	r3, r3, #1
 8000388:	1aca      	subs	r2, r1, r3
 800038a:	647a      	str	r2, [r7, #68]	; 0x44
    seg7_put(0x3, segs[index]);
 800038c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800038e:	009b      	lsls	r3, r3, #2
 8000390:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8000394:	4413      	add	r3, r2
 8000396:	f853 3c54 	ldr.w	r3, [r3, #-84]
 800039a:	2003      	movs	r0, #3
 800039c:	4619      	mov	r1, r3
 800039e:	f000 f97b 	bl	8000698 <seg7_put>
    // HEX2 is hundreds digit of decimal ADC count
    index = (val/100)%10;
 80003a2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80003a4:	4a2b      	ldr	r2, [pc, #172]	; (8000454 <main+0x270>)
 80003a6:	fba2 2303 	umull	r2, r3, r2, r3
 80003aa:	0959      	lsrs	r1, r3, #5
 80003ac:	4b28      	ldr	r3, [pc, #160]	; (8000450 <main+0x26c>)
 80003ae:	fba3 2301 	umull	r2, r3, r3, r1
 80003b2:	08da      	lsrs	r2, r3, #3
 80003b4:	4613      	mov	r3, r2
 80003b6:	009b      	lsls	r3, r3, #2
 80003b8:	4413      	add	r3, r2
 80003ba:	005b      	lsls	r3, r3, #1
 80003bc:	1aca      	subs	r2, r1, r3
 80003be:	647a      	str	r2, [r7, #68]	; 0x44
    seg7_put(0x2, segs[index]);
 80003c0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80003c2:	009b      	lsls	r3, r3, #2
 80003c4:	f107 0258 	add.w	r2, r7, #88	; 0x58
 80003c8:	4413      	add	r3, r2
 80003ca:	f853 3c54 	ldr.w	r3, [r3, #-84]
 80003ce:	2002      	movs	r0, #2
 80003d0:	4619      	mov	r1, r3
 80003d2:	f000 f961 	bl	8000698 <seg7_put>
    // HEX1 is tens digit of decimal ADC count
    index = (val/10)%10;
 80003d6:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 80003d8:	4a1d      	ldr	r2, [pc, #116]	; (8000450 <main+0x26c>)
 80003da:	fba2 2303 	umull	r2, r3, r2, r3
 80003de:	08d9      	lsrs	r1, r3, #3
 80003e0:	4b1b      	ldr	r3, [pc, #108]	; (8000450 <main+0x26c>)
 80003e2:	fba3 2301 	umull	r2, r3, r3, r1
 80003e6:	08da      	lsrs	r2, r3, #3
 80003e8:	4613      	mov	r3, r2
 80003ea:	009b      	lsls	r3, r3, #2
 80003ec:	4413      	add	r3, r2
 80003ee:	005b      	lsls	r3, r3, #1
 80003f0:	1aca      	subs	r2, r1, r3
 80003f2:	647a      	str	r2, [r7, #68]	; 0x44
    seg7_put(0x1, segs[index]);
 80003f4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80003f6:	009b      	lsls	r3, r3, #2
 80003f8:	f107 0258 	add.w	r2, r7, #88	; 0x58
 80003fc:	4413      	add	r3, r2
 80003fe:	f853 3c54 	ldr.w	r3, [r3, #-84]
 8000402:	2001      	movs	r0, #1
 8000404:	4619      	mov	r1, r3
 8000406:	f000 f947 	bl	8000698 <seg7_put>
    // HEX0 is ones digit of decimal ADC count
    index = val%10;
 800040a:	6d39      	ldr	r1, [r7, #80]	; 0x50
 800040c:	4b10      	ldr	r3, [pc, #64]	; (8000450 <main+0x26c>)
 800040e:	fba3 2301 	umull	r2, r3, r3, r1
 8000412:	08da      	lsrs	r2, r3, #3
 8000414:	4613      	mov	r3, r2
 8000416:	009b      	lsls	r3, r3, #2
 8000418:	4413      	add	r3, r2
 800041a:	005b      	lsls	r3, r3, #1
 800041c:	1aca      	subs	r2, r1, r3
 800041e:	647a      	str	r2, [r7, #68]	; 0x44
    seg7_put(0x0, segs[index]);
 8000420:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8000422:	009b      	lsls	r3, r3, #2
 8000424:	f107 0258 	add.w	r2, r7, #88	; 0x58
 8000428:	4413      	add	r3, r2
 800042a:	f853 3c54 	ldr.w	r3, [r3, #-84]
 800042e:	2000      	movs	r0, #0
 8000430:	4619      	mov	r1, r3
 8000432:	f000 f931 	bl	8000698 <seg7_put>

                                
  }
 8000436:	e6eb      	b.n	8000210 <main+0x2c>
 8000438:	080010e8 	.word	0x080010e8
 800043c:	3f480000 	.word	0x3f480000
 8000440:	66666667 	.word	0x66666667
 8000444:	40240000 	.word	0x40240000
 8000448:	40590000 	.word	0x40590000
 800044c:	10624dd3 	.word	0x10624dd3
 8000450:	cccccccd 	.word	0xcccccccd
 8000454:	51eb851f 	.word	0x51eb851f

08000458 <adc_init>:
struct RCC  * RCC  = (struct RCC*)RCC_BASE;
struct GPIO *GPIOA = (struct GPIO*)GPIOA_BASE;
struct ADC  *ADC1  = (struct ADC*)ADC1_BASE;

void adc_init(void)
{
 8000458:	b480      	push	{r7}
 800045a:	af00      	add	r7, sp, #0

  // enable GPIOA0
  RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN;
 800045c:	4b1e      	ldr	r3, [pc, #120]	; (80004d8 <adc_init+0x80>)
 800045e:	681b      	ldr	r3, [r3, #0]
 8000460:	4a1d      	ldr	r2, [pc, #116]	; (80004d8 <adc_init+0x80>)
 8000462:	6812      	ldr	r2, [r2, #0]
 8000464:	6b12      	ldr	r2, [r2, #48]	; 0x30
 8000466:	f042 0201 	orr.w	r2, r2, #1
 800046a:	631a      	str	r2, [r3, #48]	; 0x30
  GPIOA->MODER |= ((uint32_t)(GPIO_MODE_ANALOG << ( 2 * 0))); // 0x3 is analog mode
 800046c:	4b1b      	ldr	r3, [pc, #108]	; (80004dc <adc_init+0x84>)
 800046e:	681b      	ldr	r3, [r3, #0]
 8000470:	4a1a      	ldr	r2, [pc, #104]	; (80004dc <adc_init+0x84>)
 8000472:	6812      	ldr	r2, [r2, #0]
 8000474:	6812      	ldr	r2, [r2, #0]
 8000476:	f042 0203 	orr.w	r2, r2, #3
 800047a:	601a      	str	r2, [r3, #0]
  
 // enable APB2 for ADC1
  RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 800047c:	4b16      	ldr	r3, [pc, #88]	; (80004d8 <adc_init+0x80>)
 800047e:	681b      	ldr	r3, [r3, #0]
 8000480:	4a15      	ldr	r2, [pc, #84]	; (80004d8 <adc_init+0x80>)
 8000482:	6812      	ldr	r2, [r2, #0]
 8000484:	6c52      	ldr	r2, [r2, #68]	; 0x44
 8000486:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800048a:	645a      	str	r2, [r3, #68]	; 0x44

  ADC1->CR1 = 0; // defaults are fine for now
 800048c:	4b14      	ldr	r3, [pc, #80]	; (80004e0 <adc_init+0x88>)
 800048e:	681b      	ldr	r3, [r3, #0]
 8000490:	2200      	movs	r2, #0
 8000492:	605a      	str	r2, [r3, #4]
  ADC1->CR2 = 0; // defaults are fine for now
 8000494:	4b12      	ldr	r3, [pc, #72]	; (80004e0 <adc_init+0x88>)
 8000496:	681b      	ldr	r3, [r3, #0]
 8000498:	2200      	movs	r2, #0
 800049a:	609a      	str	r2, [r3, #8]
  
  // Configure Channel/Sequence
  // SQR1[23:20] set sequence length -- 0 means one conversion 
  ADC1->SQR1 = 0;
 800049c:	4b10      	ldr	r3, [pc, #64]	; (80004e0 <adc_init+0x88>)
 800049e:	681b      	ldr	r3, [r3, #0]
 80004a0:	2200      	movs	r2, #0
 80004a2:	62da      	str	r2, [r3, #44]	; 0x2c
  // NOTE: set ~10us to read 
  // ADCCLK is F_pclk2 (84MHz) / prescaler
  // default prescaler = 2, so default ADCCLK is 42MHz
  // 42MHz -> 23.9ns cycle, so we need 480 cycle sampling time
  // Set Sample Time (480 Cycles)
  ADC1->SMPR1 = 7<<18;
 80004a4:	4b0e      	ldr	r3, [pc, #56]	; (80004e0 <adc_init+0x88>)
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	f44f 12e0 	mov.w	r2, #1835008	; 0x1c0000
 80004ac:	60da      	str	r2, [r3, #12]

  // set the channel
  ADC1->SQR2 = 0;
 80004ae:	4b0c      	ldr	r3, [pc, #48]	; (80004e0 <adc_init+0x88>)
 80004b0:	681b      	ldr	r3, [r3, #0]
 80004b2:	2200      	movs	r2, #0
 80004b4:	631a      	str	r2, [r3, #48]	; 0x30
  ADC1->SQR3 = 0; // choose ADC IN0
 80004b6:	4b0a      	ldr	r3, [pc, #40]	; (80004e0 <adc_init+0x88>)
 80004b8:	681b      	ldr	r3, [r3, #0]
 80004ba:	2200      	movs	r2, #0
 80004bc:	635a      	str	r2, [r3, #52]	; 0x34

  // Enable ADC
  ADC1->CR2 |= ADC_CR2_ADON;
 80004be:	4b08      	ldr	r3, [pc, #32]	; (80004e0 <adc_init+0x88>)
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	4a07      	ldr	r2, [pc, #28]	; (80004e0 <adc_init+0x88>)
 80004c4:	6812      	ldr	r2, [r2, #0]
 80004c6:	6892      	ldr	r2, [r2, #8]
 80004c8:	f042 0201 	orr.w	r2, r2, #1
 80004cc:	609a      	str	r2, [r3, #8]
}
 80004ce:	46bd      	mov	sp, r7
 80004d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004d4:	4770      	bx	lr
 80004d6:	bf00      	nop
 80004d8:	20000000 	.word	0x20000000
 80004dc:	20000004 	.word	0x20000004
 80004e0:	20000008 	.word	0x20000008

080004e4 <adc_start>:

void adc_start(void)
{
 80004e4:	b480      	push	{r7}
 80004e6:	af00      	add	r7, sp, #0
  // Start Regular Channel Conversion
  ADC1->CR2 |= ADC_CR2_SWSTART;
 80004e8:	4b05      	ldr	r3, [pc, #20]	; (8000500 <adc_start+0x1c>)
 80004ea:	681b      	ldr	r3, [r3, #0]
 80004ec:	4a04      	ldr	r2, [pc, #16]	; (8000500 <adc_start+0x1c>)
 80004ee:	6812      	ldr	r2, [r2, #0]
 80004f0:	6892      	ldr	r2, [r2, #8]
 80004f2:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 80004f6:	609a      	str	r2, [r3, #8]
}
 80004f8:	46bd      	mov	sp, r7
 80004fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004fe:	4770      	bx	lr
 8000500:	20000008 	.word	0x20000008

08000504 <adc_done>:

bool adc_done(void)
{
 8000504:	b480      	push	{r7}
 8000506:	af00      	add	r7, sp, #0
  // This bit is SET by hardware once the conversion is complete
  // it is CLEARED by software OR by reading the ADC_DR register
  return (ADC1->SR & ADC_SR_EOC);
 8000508:	4b07      	ldr	r3, [pc, #28]	; (8000528 <adc_done+0x24>)
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	f003 0302 	and.w	r3, r3, #2
 8000512:	2b00      	cmp	r3, #0
 8000514:	bf14      	ite	ne
 8000516:	2301      	movne	r3, #1
 8000518:	2300      	moveq	r3, #0
 800051a:	b2db      	uxtb	r3, r3
}
 800051c:	4618      	mov	r0, r3
 800051e:	46bd      	mov	sp, r7
 8000520:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000524:	4770      	bx	lr
 8000526:	bf00      	nop
 8000528:	20000008 	.word	0x20000008

0800052c <adc_get>:

uint32_t adc_get(void)
{
 800052c:	b480      	push	{r7}
 800052e:	af00      	add	r7, sp, #0
  // this clears the ADC_SR_EOC bit
  return ADC1->DR;
 8000530:	4b03      	ldr	r3, [pc, #12]	; (8000540 <adc_get+0x14>)
 8000532:	681b      	ldr	r3, [r3, #0]
 8000534:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
}
 8000536:	4618      	mov	r0, r3
 8000538:	46bd      	mov	sp, r7
 800053a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800053e:	4770      	bx	lr
 8000540:	20000008 	.word	0x20000008

08000544 <rcc_gpio_enable>:
   .thumb_func
   .type       rcc_gpio_enable, %function

rcc_gpio_enable:

  mov r3,#4
 8000544:	f04f 0304 	mov.w	r3, #4
  cmp r0,r3
 8000548:	4298      	cmp	r0, r3
  bgt skip_enable
 800054a:	dc08      	bgt.n	800055e <skip_enable>
    
    ldr r3,=RCC_BASE
 800054c:	4b04      	ldr	r3, [pc, #16]	; (8000560 <skip_enable+0x2>)
    ldr r1,[r3, #RCC_AHB1ENR]
 800054e:	6b19      	ldr	r1, [r3, #48]	; 0x30
    mov r2,#1
 8000550:	f04f 0201 	mov.w	r2, #1
    lsl r2,r0
 8000554:	fa02 f200 	lsl.w	r2, r2, r0
    orr r1,r2
 8000558:	ea41 0102 	orr.w	r1, r1, r2
    str r1,[r3, RCC_AHB1ENR]
 800055c:	6319      	str	r1, [r3, #48]	; 0x30

0800055e <skip_enable>:

  skip_enable:

  bx lr
 800055e:	4770      	bx	lr

  mov r3,#4
  cmp r0,r3
  bgt skip_enable
    
    ldr r3,=RCC_BASE
 8000560:	40023800 	.word	0x40023800

08000564 <gpio_d_init>:

  .text

  FUNCTION gpio_d_init,global

    push {lr}
 8000564:	b500      	push	{lr}

		mov r0,#3						//send 3 as arg to rcc function
 8000566:	f04f 0003 	mov.w	r0, #3
		bl rcc_gpio_enable				//call rcc function
 800056a:	f7ff ffeb 	bl	8000544 <rcc_gpio_enable>

		ldr r3, =#GPIOD_BASE			//load r3 with the base address of PORT D
 800056e:	4b06      	ldr	r3, [pc, #24]	; (8000588 <gpio_d_init+0x24>)

		ldr r2, =#0x00000000			//load 0 into r2
 8000570:	4a06      	ldr	r2, [pc, #24]	; (800058c <gpio_d_init+0x28>)
		str r2,[r3,#GPIO_PUPDR]			//write Port D PUPDR register as no pull-up, no pull-down
 8000572:	60da      	str	r2, [r3, #12]
		str r2,[r3,#GPIO_OTYPER]		//write Port D OTYPER register as reset state
 8000574:	605a      	str	r2, [r3, #4]
		str r2,[r3,#GPIO_ODR]			//write 0 to GPIO Port D output data register
 8000576:	615a      	str	r2, [r3, #20]

		ldr r2,=#0x55555555				//set all 16 bits of Port D to outputs
 8000578:	4a05      	ldr	r2, [pc, #20]	; (8000590 <gpio_d_init+0x2c>)
		str r2,[r3,#GPIO_MODER]
 800057a:	601a      	str	r2, [r3, #0]

		ldr r2,=#0xffffffff				//load all ones into r2
 800057c:	4a05      	ldr	r2, [pc, #20]	; (8000594 <gpio_d_init+0x30>)
		str r2,[r3,#GPIO_OSPEEDR]		//set Port D SPEEDR register as high speed
 800057e:	609a      	str	r2, [r3, #8]

		pop {lr}
 8000580:	f85d eb04 	ldr.w	lr, [sp], #4

    bx lr
 8000584:	4770      	bx	lr
 8000586:	0000      	.short	0x0000
    push {lr}

		mov r0,#3						//send 3 as arg to rcc function
		bl rcc_gpio_enable				//call rcc function

		ldr r3, =#GPIOD_BASE			//load r3 with the base address of PORT D
 8000588:	40020c00 	.word	0x40020c00

		ldr r2, =#0x00000000			//load 0 into r2
 800058c:	00000000 	.word	0x00000000
		str r2,[r3,#GPIO_PUPDR]			//write Port D PUPDR register as no pull-up, no pull-down
		str r2,[r3,#GPIO_OTYPER]		//write Port D OTYPER register as reset state
		str r2,[r3,#GPIO_ODR]			//write 0 to GPIO Port D output data register

		ldr r2,=#0x55555555				//set all 16 bits of Port D to outputs
 8000590:	55555555 	.word	0x55555555
		str r2,[r3,#GPIO_MODER]

		ldr r2,=#0xffffffff				//load all ones into r2
 8000594:	ffffffff 	.word	0xffffffff

08000598 <gpio_d_put>:
  
  ENDFUNC gpio_d_init

  FUNCTION gpio_d_put,global

		push {lr}
 8000598:	b500      	push	{lr}

		ldr r3, =#GPIOD_BASE		//load r3 with the base address of Port D
 800059a:	4b02      	ldr	r3, [pc, #8]	; (80005a4 <gpio_d_put+0xc>)

		str r0,[r3,#GPIO_ODR]		//write r0 to GPIO Port D output
 800059c:	6158      	str	r0, [r3, #20]

		pop {lr}
 800059e:	f85d eb04 	ldr.w	lr, [sp], #4

		bx lr
 80005a2:	4770      	bx	lr

  FUNCTION gpio_d_put,global

		push {lr}

		ldr r3, =#GPIOD_BASE		//load r3 with the base address of Port D
 80005a4:	40020c00 	.word	0x40020c00

080005a8 <gpio_d_get_current>:

  ENDFUNC gpio_d_put

  FUNCTION gpio_d_get_current,global

        push {lr}
 80005a8:	b500      	push	{lr}

        ldr r3,=#GPIOD_BASE         //load r3 with base register address of port D
 80005aa:	4b02      	ldr	r3, [pc, #8]	; (80005b4 <gpio_d_get_current+0xc>)
        ldr r0,[r3,#GPIO_ODR]       //load r0 (return arg) with GPIO D output data register
 80005ac:	6958      	ldr	r0, [r3, #20]

        pop {lr}
 80005ae:	f85d eb04 	ldr.w	lr, [sp], #4

        bx lr
 80005b2:	4770      	bx	lr

  FUNCTION gpio_d_get_current,global

        push {lr}

        ldr r3,=#GPIOD_BASE         //load r3 with base register address of port D
 80005b4:	40020c00 	.word	0x40020c00

080005b8 <ADC_IRQHandler>:
*/

FUNCTION Default_Handler

  Infinite_Loop:
    b  Infinite_Loop
 80005b8:	e7fe      	b.n	80005b8 <ADC_IRQHandler>
 80005ba:	bf00      	nop

080005bc <Reset_Handler>:
  .text
  
  FUNCTION Reset_Handler,global

    /* Copy the data segment initializers from flash to SRAM */  
    ldr	r1, =__etext		// from start
 80005bc:	4915      	ldr	r1, [pc, #84]	; (8000614 <bloop+0x3e>)
    ldr	r2, =__data_start__	// to start
 80005be:	4a16      	ldr	r2, [pc, #88]	; (8000618 <bloop+0x42>)
    ldr	r3, =__data_end__	// to end
 80005c0:	4b16      	ldr	r3, [pc, #88]	; (800061c <bloop+0x46>)

080005c2 <loop_data>:

    loop_data:
      cmp	r2, r3
 80005c2:	429a      	cmp	r2, r3
      ittt	lt
 80005c4:	bfbe      	ittt	lt
      ldrlt	r0, [r1], #4
 80005c6:	f851 0b04 	ldrlt.w	r0, [r1], #4
      strlt	r0, [r2], #4
 80005ca:	f842 0b04 	strlt.w	r0, [r2], #4
      blt	loop_data
 80005ce:	e7f8      	blt.n	80005c2 <loop_data>
      
    movs    r0, #0
 80005d0:	2000      	movs	r0, #0
    ldr     r1, =__bss_start__
 80005d2:	4913      	ldr	r1, [pc, #76]	; (8000620 <bloop+0x4a>)
    ldr     r2, =__bss_end__
 80005d4:	4a13      	ldr	r2, [pc, #76]	; (8000624 <bloop+0x4e>)

080005d6 <bloop>:

    bloop:
      cmp     r1, r2
 80005d6:	4291      	cmp	r1, r2
      itt     lo
 80005d8:	bf3c      	itt	cc
      strlo   r0, [r1], #4
 80005da:	f841 0b04 	strcc.w	r0, [r1], #4
      blo     bloop
 80005de:	e7fa      	bcc.n	80005d6 <bloop>
    
    bl __libc_init_array
 80005e0:	f000 fc7c 	bl	8000edc <__libc_init_array>

    ldr	r0, .Lfini
 80005e4:	480a      	ldr	r0, [pc, #40]	; (8000610 <bloop+0x3a>)
    bl	atexit
 80005e6:	f000 fc63 	bl	8000eb0 <atexit>

    .weak SystemInit
    ldr	r0,=SystemInit
 80005ea:	480f      	ldr	r0, [pc, #60]	; (8000628 <bloop+0x52>)
    cmp	r0,#0
 80005ec:	2800      	cmp	r0, #0
    it	ne
 80005ee:	bf18      	it	ne
    blxne	r0
 80005f0:	4780      	blxne	r0
    
    ldr	  r3,=0xe000ed14
 80005f2:	4b0e      	ldr	r3, [pc, #56]	; (800062c <bloop+0x56>)
    ldr   r2,=((1<<4) | (1<<3))
 80005f4:	4a0e      	ldr	r2, [pc, #56]	; (8000630 <bloop+0x5a>)
    str   r2,[r3]
 80005f6:	601a      	str	r2, [r3, #0]
      .equ RCC_AHB1ENR_GPIOB_EN,(1<<1)
      .equ RCC_AHB1ENR_GPIOC_EN,(1<<2)
      .equ RCC_AHB1ENR_GPIOD_EN,(1<<3)
      .equ RCC_AHB1ENR_GPIOE_EN,(1<<4)
     
    ldr r3,=RCC_BASE
 80005f8:	4b0e      	ldr	r3, [pc, #56]	; (8000634 <bloop+0x5e>)
    ldr r1,[r3, #RCC_AHB1ENR]
 80005fa:	6b19      	ldr	r1, [r3, #48]	; 0x30
    mov r2,#0b11111			/* enable all clocks */
 80005fc:	f04f 021f 	mov.w	r2, #31
    orr r1,r2
 8000600:	ea41 0102 	orr.w	r1, r1, r2
    str r1,[r3, #RCC_AHB1ENR]
 8000604:	6319      	str	r1, [r3, #48]	; 0x30
    
    bl  main
 8000606:	f7ff fded 	bl	80001e4 <main>
	
    bl  exit
 800060a:	f000 fc57 	bl	8000ebc <exit>
	
    bx  lr
 800060e:	4770      	bx	lr
 8000610:	0800113d 	.word	0x0800113d
  .text
  
  FUNCTION Reset_Handler,global

    /* Copy the data segment initializers from flash to SRAM */  
    ldr	r1, =__etext		// from start
 8000614:	08001154 	.word	0x08001154
    ldr	r2, =__data_start__	// to start
 8000618:	20000000 	.word	0x20000000
    ldr	r3, =__data_end__	// to end
 800061c:	20000438 	.word	0x20000438
      ldrlt	r0, [r1], #4
      strlt	r0, [r2], #4
      blt	loop_data
      
    movs    r0, #0
    ldr     r1, =__bss_start__
 8000620:	20000438 	.word	0x20000438
    ldr     r2, =__bss_end__
 8000624:	20000454 	.word	0x20000454

    ldr	r0, .Lfini
    bl	atexit

    .weak SystemInit
    ldr	r0,=SystemInit
 8000628:	00000000 	.word	0x00000000
    cmp	r0,#0
    it	ne
    blxne	r0
    
    ldr	  r3,=0xe000ed14
 800062c:	e000ed14 	.word	0xe000ed14
    ldr   r2,=((1<<4) | (1<<3))
 8000630:	00000018 	.word	0x00000018
      .equ RCC_AHB1ENR_GPIOB_EN,(1<<1)
      .equ RCC_AHB1ENR_GPIOC_EN,(1<<2)
      .equ RCC_AHB1ENR_GPIOD_EN,(1<<3)
      .equ RCC_AHB1ENR_GPIOE_EN,(1<<4)
     
    ldr r3,=RCC_BASE
 8000634:	40023800 	.word	0x40023800

08000638 <seg7_init>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	4b11      	ldr	r3, [pc, #68]	; (8000680 <seg7_init_loop_end+0x6>)
 800063c:	681a      	ldr	r2, [r3, #0]
 800063e:	4911      	ldr	r1, [pc, #68]	; (8000684 <seg7_init_loop_end+0xa>)
 8000640:	f361 0213 	bfi	r2, r1, #0, #20
 8000644:	601a      	str	r2, [r3, #0]
 8000646:	695a      	ldr	r2, [r3, #20]
 8000648:	490f      	ldr	r1, [pc, #60]	; (8000688 <seg7_init_loop_end+0xe>)
 800064a:	f361 0209 	bfi	r2, r1, #0, #10
 800064e:	615a      	str	r2, [r3, #20]
 8000650:	4b0e      	ldr	r3, [pc, #56]	; (800068c <seg7_init_loop_end+0x12>)
 8000652:	681a      	ldr	r2, [r3, #0]
 8000654:	490e      	ldr	r1, [pc, #56]	; (8000690 <seg7_init_loop_end+0x16>)
 8000656:	f361 0201 	bfi	r2, r1, #0, #2
 800065a:	601a      	str	r2, [r3, #0]
 800065c:	f04f 0400 	mov.w	r4, #0
 8000660:	f04f 0508 	mov.w	r5, #8
 8000664:	4e0b      	ldr	r6, [pc, #44]	; (8000694 <seg7_init_loop_end+0x1a>)

08000666 <seg7_init_loop>:
 8000666:	b145      	cbz	r5, 800067a <seg7_init_loop_end>
 8000668:	4620      	mov	r0, r4
 800066a:	4631      	mov	r1, r6
 800066c:	f000 f814 	bl	8000698 <seg7_put>
 8000670:	f104 0401 	add.w	r4, r4, #1
 8000674:	f1a5 0501 	sub.w	r5, r5, #1
 8000678:	e7f5      	b.n	8000666 <seg7_init_loop>

0800067a <seg7_init_loop_end>:
 800067a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800067e:	4770      	bx	lr
 8000680:	40021000 	.word	0x40021000
 8000684:	00055555 	.word	0x00055555
 8000688:	000003ff 	.word	0x000003ff
 800068c:	40020400 	.word	0x40020400
 8000690:	00000001 	.word	0x00000001
 8000694:	0000007f 	.word	0x0000007f

08000698 <seg7_put>:
 8000698:	b5f0      	push	{r4, r5, r6, r7, lr}
 800069a:	4f0a      	ldr	r7, [pc, #40]	; (80006c4 <seg7_put+0x2c>)
 800069c:	697c      	ldr	r4, [r7, #20]
 800069e:	f360 0402 	bfi	r4, r0, #0, #3
 80006a2:	f361 04c9 	bfi	r4, r1, #3, #7
 80006a6:	617c      	str	r4, [r7, #20]
 80006a8:	4f07      	ldr	r7, [pc, #28]	; (80006c8 <seg7_put+0x30>)
 80006aa:	f04f 0401 	mov.w	r4, #1
 80006ae:	61bc      	str	r4, [r7, #24]
 80006b0:	bf00      	nop
 80006b2:	bf00      	nop
 80006b4:	bf00      	nop
 80006b6:	bf00      	nop
 80006b8:	ea4f 4404 	mov.w	r4, r4, lsl #16
 80006bc:	61bc      	str	r4, [r7, #24]
 80006be:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80006c2:	4770      	bx	lr
 80006c4:	40021000 	.word	0x40021000
 80006c8:	40020400 	.word	0x40020400

080006cc <__aeabi_drsub>:
 80006cc:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80006d0:	e002      	b.n	80006d8 <__adddf3>
 80006d2:	bf00      	nop

080006d4 <__aeabi_dsub>:
 80006d4:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080006d8 <__adddf3>:
 80006d8:	b530      	push	{r4, r5, lr}
 80006da:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80006de:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80006e2:	ea94 0f05 	teq	r4, r5
 80006e6:	bf08      	it	eq
 80006e8:	ea90 0f02 	teqeq	r0, r2
 80006ec:	bf1f      	itttt	ne
 80006ee:	ea54 0c00 	orrsne.w	ip, r4, r0
 80006f2:	ea55 0c02 	orrsne.w	ip, r5, r2
 80006f6:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80006fa:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80006fe:	f000 80e2 	beq.w	80008c6 <__adddf3+0x1ee>
 8000702:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000706:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800070a:	bfb8      	it	lt
 800070c:	426d      	neglt	r5, r5
 800070e:	dd0c      	ble.n	800072a <__adddf3+0x52>
 8000710:	442c      	add	r4, r5
 8000712:	ea80 0202 	eor.w	r2, r0, r2
 8000716:	ea81 0303 	eor.w	r3, r1, r3
 800071a:	ea82 0000 	eor.w	r0, r2, r0
 800071e:	ea83 0101 	eor.w	r1, r3, r1
 8000722:	ea80 0202 	eor.w	r2, r0, r2
 8000726:	ea81 0303 	eor.w	r3, r1, r3
 800072a:	2d36      	cmp	r5, #54	; 0x36
 800072c:	bf88      	it	hi
 800072e:	bd30      	pophi	{r4, r5, pc}
 8000730:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000734:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000738:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 800073c:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000740:	d002      	beq.n	8000748 <__adddf3+0x70>
 8000742:	4240      	negs	r0, r0
 8000744:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000748:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 800074c:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000750:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000754:	d002      	beq.n	800075c <__adddf3+0x84>
 8000756:	4252      	negs	r2, r2
 8000758:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800075c:	ea94 0f05 	teq	r4, r5
 8000760:	f000 80a7 	beq.w	80008b2 <__adddf3+0x1da>
 8000764:	f1a4 0401 	sub.w	r4, r4, #1
 8000768:	f1d5 0e20 	rsbs	lr, r5, #32
 800076c:	db0d      	blt.n	800078a <__adddf3+0xb2>
 800076e:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000772:	fa22 f205 	lsr.w	r2, r2, r5
 8000776:	1880      	adds	r0, r0, r2
 8000778:	f141 0100 	adc.w	r1, r1, #0
 800077c:	fa03 f20e 	lsl.w	r2, r3, lr
 8000780:	1880      	adds	r0, r0, r2
 8000782:	fa43 f305 	asr.w	r3, r3, r5
 8000786:	4159      	adcs	r1, r3
 8000788:	e00e      	b.n	80007a8 <__adddf3+0xd0>
 800078a:	f1a5 0520 	sub.w	r5, r5, #32
 800078e:	f10e 0e20 	add.w	lr, lr, #32
 8000792:	2a01      	cmp	r2, #1
 8000794:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000798:	bf28      	it	cs
 800079a:	f04c 0c02 	orrcs.w	ip, ip, #2
 800079e:	fa43 f305 	asr.w	r3, r3, r5
 80007a2:	18c0      	adds	r0, r0, r3
 80007a4:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80007a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80007ac:	d507      	bpl.n	80007be <__adddf3+0xe6>
 80007ae:	f04f 0e00 	mov.w	lr, #0
 80007b2:	f1dc 0c00 	rsbs	ip, ip, #0
 80007b6:	eb7e 0000 	sbcs.w	r0, lr, r0
 80007ba:	eb6e 0101 	sbc.w	r1, lr, r1
 80007be:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 80007c2:	d31b      	bcc.n	80007fc <__adddf3+0x124>
 80007c4:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80007c8:	d30c      	bcc.n	80007e4 <__adddf3+0x10c>
 80007ca:	0849      	lsrs	r1, r1, #1
 80007cc:	ea5f 0030 	movs.w	r0, r0, rrx
 80007d0:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80007d4:	f104 0401 	add.w	r4, r4, #1
 80007d8:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80007dc:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80007e0:	f080 809a 	bcs.w	8000918 <__adddf3+0x240>
 80007e4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80007e8:	bf08      	it	eq
 80007ea:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80007ee:	f150 0000 	adcs.w	r0, r0, #0
 80007f2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80007f6:	ea41 0105 	orr.w	r1, r1, r5
 80007fa:	bd30      	pop	{r4, r5, pc}
 80007fc:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000800:	4140      	adcs	r0, r0
 8000802:	eb41 0101 	adc.w	r1, r1, r1
 8000806:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800080a:	f1a4 0401 	sub.w	r4, r4, #1
 800080e:	d1e9      	bne.n	80007e4 <__adddf3+0x10c>
 8000810:	f091 0f00 	teq	r1, #0
 8000814:	bf04      	itt	eq
 8000816:	4601      	moveq	r1, r0
 8000818:	2000      	moveq	r0, #0
 800081a:	fab1 f381 	clz	r3, r1
 800081e:	bf08      	it	eq
 8000820:	3320      	addeq	r3, #32
 8000822:	f1a3 030b 	sub.w	r3, r3, #11
 8000826:	f1b3 0220 	subs.w	r2, r3, #32
 800082a:	da0c      	bge.n	8000846 <__adddf3+0x16e>
 800082c:	320c      	adds	r2, #12
 800082e:	dd08      	ble.n	8000842 <__adddf3+0x16a>
 8000830:	f102 0c14 	add.w	ip, r2, #20
 8000834:	f1c2 020c 	rsb	r2, r2, #12
 8000838:	fa01 f00c 	lsl.w	r0, r1, ip
 800083c:	fa21 f102 	lsr.w	r1, r1, r2
 8000840:	e00c      	b.n	800085c <__adddf3+0x184>
 8000842:	f102 0214 	add.w	r2, r2, #20
 8000846:	bfd8      	it	le
 8000848:	f1c2 0c20 	rsble	ip, r2, #32
 800084c:	fa01 f102 	lsl.w	r1, r1, r2
 8000850:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000854:	bfdc      	itt	le
 8000856:	ea41 010c 	orrle.w	r1, r1, ip
 800085a:	4090      	lslle	r0, r2
 800085c:	1ae4      	subs	r4, r4, r3
 800085e:	bfa2      	ittt	ge
 8000860:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000864:	4329      	orrge	r1, r5
 8000866:	bd30      	popge	{r4, r5, pc}
 8000868:	ea6f 0404 	mvn.w	r4, r4
 800086c:	3c1f      	subs	r4, #31
 800086e:	da1c      	bge.n	80008aa <__adddf3+0x1d2>
 8000870:	340c      	adds	r4, #12
 8000872:	dc0e      	bgt.n	8000892 <__adddf3+0x1ba>
 8000874:	f104 0414 	add.w	r4, r4, #20
 8000878:	f1c4 0220 	rsb	r2, r4, #32
 800087c:	fa20 f004 	lsr.w	r0, r0, r4
 8000880:	fa01 f302 	lsl.w	r3, r1, r2
 8000884:	ea40 0003 	orr.w	r0, r0, r3
 8000888:	fa21 f304 	lsr.w	r3, r1, r4
 800088c:	ea45 0103 	orr.w	r1, r5, r3
 8000890:	bd30      	pop	{r4, r5, pc}
 8000892:	f1c4 040c 	rsb	r4, r4, #12
 8000896:	f1c4 0220 	rsb	r2, r4, #32
 800089a:	fa20 f002 	lsr.w	r0, r0, r2
 800089e:	fa01 f304 	lsl.w	r3, r1, r4
 80008a2:	ea40 0003 	orr.w	r0, r0, r3
 80008a6:	4629      	mov	r1, r5
 80008a8:	bd30      	pop	{r4, r5, pc}
 80008aa:	fa21 f004 	lsr.w	r0, r1, r4
 80008ae:	4629      	mov	r1, r5
 80008b0:	bd30      	pop	{r4, r5, pc}
 80008b2:	f094 0f00 	teq	r4, #0
 80008b6:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 80008ba:	bf06      	itte	eq
 80008bc:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 80008c0:	3401      	addeq	r4, #1
 80008c2:	3d01      	subne	r5, #1
 80008c4:	e74e      	b.n	8000764 <__adddf3+0x8c>
 80008c6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80008ca:	bf18      	it	ne
 80008cc:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80008d0:	d029      	beq.n	8000926 <__adddf3+0x24e>
 80008d2:	ea94 0f05 	teq	r4, r5
 80008d6:	bf08      	it	eq
 80008d8:	ea90 0f02 	teqeq	r0, r2
 80008dc:	d005      	beq.n	80008ea <__adddf3+0x212>
 80008de:	ea54 0c00 	orrs.w	ip, r4, r0
 80008e2:	bf04      	itt	eq
 80008e4:	4619      	moveq	r1, r3
 80008e6:	4610      	moveq	r0, r2
 80008e8:	bd30      	pop	{r4, r5, pc}
 80008ea:	ea91 0f03 	teq	r1, r3
 80008ee:	bf1e      	ittt	ne
 80008f0:	2100      	movne	r1, #0
 80008f2:	2000      	movne	r0, #0
 80008f4:	bd30      	popne	{r4, r5, pc}
 80008f6:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80008fa:	d105      	bne.n	8000908 <__adddf3+0x230>
 80008fc:	0040      	lsls	r0, r0, #1
 80008fe:	4149      	adcs	r1, r1
 8000900:	bf28      	it	cs
 8000902:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000906:	bd30      	pop	{r4, r5, pc}
 8000908:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 800090c:	bf3c      	itt	cc
 800090e:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 8000912:	bd30      	popcc	{r4, r5, pc}
 8000914:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000918:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 800091c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000920:	f04f 0000 	mov.w	r0, #0
 8000924:	bd30      	pop	{r4, r5, pc}
 8000926:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800092a:	bf1a      	itte	ne
 800092c:	4619      	movne	r1, r3
 800092e:	4610      	movne	r0, r2
 8000930:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000934:	bf1c      	itt	ne
 8000936:	460b      	movne	r3, r1
 8000938:	4602      	movne	r2, r0
 800093a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800093e:	bf06      	itte	eq
 8000940:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000944:	ea91 0f03 	teqeq	r1, r3
 8000948:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 800094c:	bd30      	pop	{r4, r5, pc}
 800094e:	bf00      	nop

08000950 <__aeabi_ui2d>:
 8000950:	f090 0f00 	teq	r0, #0
 8000954:	bf04      	itt	eq
 8000956:	2100      	moveq	r1, #0
 8000958:	4770      	bxeq	lr
 800095a:	b530      	push	{r4, r5, lr}
 800095c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000960:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000964:	f04f 0500 	mov.w	r5, #0
 8000968:	f04f 0100 	mov.w	r1, #0
 800096c:	e750      	b.n	8000810 <__adddf3+0x138>
 800096e:	bf00      	nop

08000970 <__aeabi_i2d>:
 8000970:	f090 0f00 	teq	r0, #0
 8000974:	bf04      	itt	eq
 8000976:	2100      	moveq	r1, #0
 8000978:	4770      	bxeq	lr
 800097a:	b530      	push	{r4, r5, lr}
 800097c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000980:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000984:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8000988:	bf48      	it	mi
 800098a:	4240      	negmi	r0, r0
 800098c:	f04f 0100 	mov.w	r1, #0
 8000990:	e73e      	b.n	8000810 <__adddf3+0x138>
 8000992:	bf00      	nop

08000994 <__aeabi_f2d>:
 8000994:	0042      	lsls	r2, r0, #1
 8000996:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800099a:	ea4f 0131 	mov.w	r1, r1, rrx
 800099e:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80009a2:	bf1f      	itttt	ne
 80009a4:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 80009a8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80009ac:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 80009b0:	4770      	bxne	lr
 80009b2:	f092 0f00 	teq	r2, #0
 80009b6:	bf14      	ite	ne
 80009b8:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 80009bc:	4770      	bxeq	lr
 80009be:	b530      	push	{r4, r5, lr}
 80009c0:	f44f 7460 	mov.w	r4, #896	; 0x380
 80009c4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80009c8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80009cc:	e720      	b.n	8000810 <__adddf3+0x138>
 80009ce:	bf00      	nop

080009d0 <__aeabi_ul2d>:
 80009d0:	ea50 0201 	orrs.w	r2, r0, r1
 80009d4:	bf08      	it	eq
 80009d6:	4770      	bxeq	lr
 80009d8:	b530      	push	{r4, r5, lr}
 80009da:	f04f 0500 	mov.w	r5, #0
 80009de:	e00a      	b.n	80009f6 <__aeabi_l2d+0x16>

080009e0 <__aeabi_l2d>:
 80009e0:	ea50 0201 	orrs.w	r2, r0, r1
 80009e4:	bf08      	it	eq
 80009e6:	4770      	bxeq	lr
 80009e8:	b530      	push	{r4, r5, lr}
 80009ea:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80009ee:	d502      	bpl.n	80009f6 <__aeabi_l2d+0x16>
 80009f0:	4240      	negs	r0, r0
 80009f2:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80009f6:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80009fa:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80009fe:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000a02:	f43f aedc 	beq.w	80007be <__adddf3+0xe6>
 8000a06:	f04f 0203 	mov.w	r2, #3
 8000a0a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000a0e:	bf18      	it	ne
 8000a10:	3203      	addne	r2, #3
 8000a12:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000a16:	bf18      	it	ne
 8000a18:	3203      	addne	r2, #3
 8000a1a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000a1e:	f1c2 0320 	rsb	r3, r2, #32
 8000a22:	fa00 fc03 	lsl.w	ip, r0, r3
 8000a26:	fa20 f002 	lsr.w	r0, r0, r2
 8000a2a:	fa01 fe03 	lsl.w	lr, r1, r3
 8000a2e:	ea40 000e 	orr.w	r0, r0, lr
 8000a32:	fa21 f102 	lsr.w	r1, r1, r2
 8000a36:	4414      	add	r4, r2
 8000a38:	e6c1      	b.n	80007be <__adddf3+0xe6>
 8000a3a:	bf00      	nop

08000a3c <__aeabi_dmul>:
 8000a3c:	b570      	push	{r4, r5, r6, lr}
 8000a3e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000a42:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000a46:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000a4a:	bf1d      	ittte	ne
 8000a4c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000a50:	ea94 0f0c 	teqne	r4, ip
 8000a54:	ea95 0f0c 	teqne	r5, ip
 8000a58:	f000 f8de 	bleq	8000c18 <__aeabi_dmul+0x1dc>
 8000a5c:	442c      	add	r4, r5
 8000a5e:	ea81 0603 	eor.w	r6, r1, r3
 8000a62:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000a66:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000a6a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 8000a6e:	bf18      	it	ne
 8000a70:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000a74:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000a78:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000a7c:	d038      	beq.n	8000af0 <__aeabi_dmul+0xb4>
 8000a7e:	fba0 ce02 	umull	ip, lr, r0, r2
 8000a82:	f04f 0500 	mov.w	r5, #0
 8000a86:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000a8a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000a8e:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000a92:	f04f 0600 	mov.w	r6, #0
 8000a96:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000a9a:	f09c 0f00 	teq	ip, #0
 8000a9e:	bf18      	it	ne
 8000aa0:	f04e 0e01 	orrne.w	lr, lr, #1
 8000aa4:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000aa8:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000aac:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000ab0:	d204      	bcs.n	8000abc <__aeabi_dmul+0x80>
 8000ab2:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000ab6:	416d      	adcs	r5, r5
 8000ab8:	eb46 0606 	adc.w	r6, r6, r6
 8000abc:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000ac0:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000ac4:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000ac8:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000acc:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000ad0:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000ad4:	bf88      	it	hi
 8000ad6:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000ada:	d81e      	bhi.n	8000b1a <__aeabi_dmul+0xde>
 8000adc:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000ae0:	bf08      	it	eq
 8000ae2:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000ae6:	f150 0000 	adcs.w	r0, r0, #0
 8000aea:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000aee:	bd70      	pop	{r4, r5, r6, pc}
 8000af0:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000af4:	ea46 0101 	orr.w	r1, r6, r1
 8000af8:	ea40 0002 	orr.w	r0, r0, r2
 8000afc:	ea81 0103 	eor.w	r1, r1, r3
 8000b00:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000b04:	bfc2      	ittt	gt
 8000b06:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000b0a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000b0e:	bd70      	popgt	{r4, r5, r6, pc}
 8000b10:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b14:	f04f 0e00 	mov.w	lr, #0
 8000b18:	3c01      	subs	r4, #1
 8000b1a:	f300 80ab 	bgt.w	8000c74 <__aeabi_dmul+0x238>
 8000b1e:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000b22:	bfde      	ittt	le
 8000b24:	2000      	movle	r0, #0
 8000b26:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000b2a:	bd70      	pople	{r4, r5, r6, pc}
 8000b2c:	f1c4 0400 	rsb	r4, r4, #0
 8000b30:	3c20      	subs	r4, #32
 8000b32:	da35      	bge.n	8000ba0 <__aeabi_dmul+0x164>
 8000b34:	340c      	adds	r4, #12
 8000b36:	dc1b      	bgt.n	8000b70 <__aeabi_dmul+0x134>
 8000b38:	f104 0414 	add.w	r4, r4, #20
 8000b3c:	f1c4 0520 	rsb	r5, r4, #32
 8000b40:	fa00 f305 	lsl.w	r3, r0, r5
 8000b44:	fa20 f004 	lsr.w	r0, r0, r4
 8000b48:	fa01 f205 	lsl.w	r2, r1, r5
 8000b4c:	ea40 0002 	orr.w	r0, r0, r2
 8000b50:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000b54:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000b58:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000b5c:	fa21 f604 	lsr.w	r6, r1, r4
 8000b60:	eb42 0106 	adc.w	r1, r2, r6
 8000b64:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000b68:	bf08      	it	eq
 8000b6a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000b6e:	bd70      	pop	{r4, r5, r6, pc}
 8000b70:	f1c4 040c 	rsb	r4, r4, #12
 8000b74:	f1c4 0520 	rsb	r5, r4, #32
 8000b78:	fa00 f304 	lsl.w	r3, r0, r4
 8000b7c:	fa20 f005 	lsr.w	r0, r0, r5
 8000b80:	fa01 f204 	lsl.w	r2, r1, r4
 8000b84:	ea40 0002 	orr.w	r0, r0, r2
 8000b88:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000b8c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000b90:	f141 0100 	adc.w	r1, r1, #0
 8000b94:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000b98:	bf08      	it	eq
 8000b9a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000b9e:	bd70      	pop	{r4, r5, r6, pc}
 8000ba0:	f1c4 0520 	rsb	r5, r4, #32
 8000ba4:	fa00 f205 	lsl.w	r2, r0, r5
 8000ba8:	ea4e 0e02 	orr.w	lr, lr, r2
 8000bac:	fa20 f304 	lsr.w	r3, r0, r4
 8000bb0:	fa01 f205 	lsl.w	r2, r1, r5
 8000bb4:	ea43 0302 	orr.w	r3, r3, r2
 8000bb8:	fa21 f004 	lsr.w	r0, r1, r4
 8000bbc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000bc0:	fa21 f204 	lsr.w	r2, r1, r4
 8000bc4:	ea20 0002 	bic.w	r0, r0, r2
 8000bc8:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000bcc:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000bd0:	bf08      	it	eq
 8000bd2:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000bd6:	bd70      	pop	{r4, r5, r6, pc}
 8000bd8:	f094 0f00 	teq	r4, #0
 8000bdc:	d10f      	bne.n	8000bfe <__aeabi_dmul+0x1c2>
 8000bde:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000be2:	0040      	lsls	r0, r0, #1
 8000be4:	eb41 0101 	adc.w	r1, r1, r1
 8000be8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000bec:	bf08      	it	eq
 8000bee:	3c01      	subeq	r4, #1
 8000bf0:	d0f7      	beq.n	8000be2 <__aeabi_dmul+0x1a6>
 8000bf2:	ea41 0106 	orr.w	r1, r1, r6
 8000bf6:	f095 0f00 	teq	r5, #0
 8000bfa:	bf18      	it	ne
 8000bfc:	4770      	bxne	lr
 8000bfe:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000c02:	0052      	lsls	r2, r2, #1
 8000c04:	eb43 0303 	adc.w	r3, r3, r3
 8000c08:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000c0c:	bf08      	it	eq
 8000c0e:	3d01      	subeq	r5, #1
 8000c10:	d0f7      	beq.n	8000c02 <__aeabi_dmul+0x1c6>
 8000c12:	ea43 0306 	orr.w	r3, r3, r6
 8000c16:	4770      	bx	lr
 8000c18:	ea94 0f0c 	teq	r4, ip
 8000c1c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000c20:	bf18      	it	ne
 8000c22:	ea95 0f0c 	teqne	r5, ip
 8000c26:	d00c      	beq.n	8000c42 <__aeabi_dmul+0x206>
 8000c28:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000c2c:	bf18      	it	ne
 8000c2e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000c32:	d1d1      	bne.n	8000bd8 <__aeabi_dmul+0x19c>
 8000c34:	ea81 0103 	eor.w	r1, r1, r3
 8000c38:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000c3c:	f04f 0000 	mov.w	r0, #0
 8000c40:	bd70      	pop	{r4, r5, r6, pc}
 8000c42:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000c46:	bf06      	itte	eq
 8000c48:	4610      	moveq	r0, r2
 8000c4a:	4619      	moveq	r1, r3
 8000c4c:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000c50:	d019      	beq.n	8000c86 <__aeabi_dmul+0x24a>
 8000c52:	ea94 0f0c 	teq	r4, ip
 8000c56:	d102      	bne.n	8000c5e <__aeabi_dmul+0x222>
 8000c58:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000c5c:	d113      	bne.n	8000c86 <__aeabi_dmul+0x24a>
 8000c5e:	ea95 0f0c 	teq	r5, ip
 8000c62:	d105      	bne.n	8000c70 <__aeabi_dmul+0x234>
 8000c64:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000c68:	bf1c      	itt	ne
 8000c6a:	4610      	movne	r0, r2
 8000c6c:	4619      	movne	r1, r3
 8000c6e:	d10a      	bne.n	8000c86 <__aeabi_dmul+0x24a>
 8000c70:	ea81 0103 	eor.w	r1, r1, r3
 8000c74:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000c78:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000c7c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000c80:	f04f 0000 	mov.w	r0, #0
 8000c84:	bd70      	pop	{r4, r5, r6, pc}
 8000c86:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000c8a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000c8e:	bd70      	pop	{r4, r5, r6, pc}

08000c90 <__aeabi_ddiv>:
 8000c90:	b570      	push	{r4, r5, r6, lr}
 8000c92:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000c96:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000c9a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000c9e:	bf1d      	ittte	ne
 8000ca0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000ca4:	ea94 0f0c 	teqne	r4, ip
 8000ca8:	ea95 0f0c 	teqne	r5, ip
 8000cac:	f000 f8a7 	bleq	8000dfe <__aeabi_ddiv+0x16e>
 8000cb0:	eba4 0405 	sub.w	r4, r4, r5
 8000cb4:	ea81 0e03 	eor.w	lr, r1, r3
 8000cb8:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000cbc:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000cc0:	f000 8088 	beq.w	8000dd4 <__aeabi_ddiv+0x144>
 8000cc4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000cc8:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000ccc:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000cd0:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000cd4:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000cd8:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000cdc:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000ce0:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000ce4:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000ce8:	429d      	cmp	r5, r3
 8000cea:	bf08      	it	eq
 8000cec:	4296      	cmpeq	r6, r2
 8000cee:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000cf2:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000cf6:	d202      	bcs.n	8000cfe <__aeabi_ddiv+0x6e>
 8000cf8:	085b      	lsrs	r3, r3, #1
 8000cfa:	ea4f 0232 	mov.w	r2, r2, rrx
 8000cfe:	1ab6      	subs	r6, r6, r2
 8000d00:	eb65 0503 	sbc.w	r5, r5, r3
 8000d04:	085b      	lsrs	r3, r3, #1
 8000d06:	ea4f 0232 	mov.w	r2, r2, rrx
 8000d0a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000d0e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000d12:	ebb6 0e02 	subs.w	lr, r6, r2
 8000d16:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000d1a:	bf22      	ittt	cs
 8000d1c:	1ab6      	subcs	r6, r6, r2
 8000d1e:	4675      	movcs	r5, lr
 8000d20:	ea40 000c 	orrcs.w	r0, r0, ip
 8000d24:	085b      	lsrs	r3, r3, #1
 8000d26:	ea4f 0232 	mov.w	r2, r2, rrx
 8000d2a:	ebb6 0e02 	subs.w	lr, r6, r2
 8000d2e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000d32:	bf22      	ittt	cs
 8000d34:	1ab6      	subcs	r6, r6, r2
 8000d36:	4675      	movcs	r5, lr
 8000d38:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000d3c:	085b      	lsrs	r3, r3, #1
 8000d3e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000d42:	ebb6 0e02 	subs.w	lr, r6, r2
 8000d46:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000d4a:	bf22      	ittt	cs
 8000d4c:	1ab6      	subcs	r6, r6, r2
 8000d4e:	4675      	movcs	r5, lr
 8000d50:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000d54:	085b      	lsrs	r3, r3, #1
 8000d56:	ea4f 0232 	mov.w	r2, r2, rrx
 8000d5a:	ebb6 0e02 	subs.w	lr, r6, r2
 8000d5e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000d62:	bf22      	ittt	cs
 8000d64:	1ab6      	subcs	r6, r6, r2
 8000d66:	4675      	movcs	r5, lr
 8000d68:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000d6c:	ea55 0e06 	orrs.w	lr, r5, r6
 8000d70:	d018      	beq.n	8000da4 <__aeabi_ddiv+0x114>
 8000d72:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000d76:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000d7a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8000d7e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8000d82:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000d86:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000d8a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000d8e:	d1c0      	bne.n	8000d12 <__aeabi_ddiv+0x82>
 8000d90:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000d94:	d10b      	bne.n	8000dae <__aeabi_ddiv+0x11e>
 8000d96:	ea41 0100 	orr.w	r1, r1, r0
 8000d9a:	f04f 0000 	mov.w	r0, #0
 8000d9e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000da2:	e7b6      	b.n	8000d12 <__aeabi_ddiv+0x82>
 8000da4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000da8:	bf04      	itt	eq
 8000daa:	4301      	orreq	r1, r0
 8000dac:	2000      	moveq	r0, #0
 8000dae:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000db2:	bf88      	it	hi
 8000db4:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000db8:	f63f aeaf 	bhi.w	8000b1a <__aeabi_dmul+0xde>
 8000dbc:	ebb5 0c03 	subs.w	ip, r5, r3
 8000dc0:	bf04      	itt	eq
 8000dc2:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000dc6:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000dca:	f150 0000 	adcs.w	r0, r0, #0
 8000dce:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000dd2:	bd70      	pop	{r4, r5, r6, pc}
 8000dd4:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000dd8:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000ddc:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000de0:	bfc2      	ittt	gt
 8000de2:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000de6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000dea:	bd70      	popgt	{r4, r5, r6, pc}
 8000dec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000df0:	f04f 0e00 	mov.w	lr, #0
 8000df4:	3c01      	subs	r4, #1
 8000df6:	e690      	b.n	8000b1a <__aeabi_dmul+0xde>
 8000df8:	ea45 0e06 	orr.w	lr, r5, r6
 8000dfc:	e68d      	b.n	8000b1a <__aeabi_dmul+0xde>
 8000dfe:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000e02:	ea94 0f0c 	teq	r4, ip
 8000e06:	bf08      	it	eq
 8000e08:	ea95 0f0c 	teqeq	r5, ip
 8000e0c:	f43f af3b 	beq.w	8000c86 <__aeabi_dmul+0x24a>
 8000e10:	ea94 0f0c 	teq	r4, ip
 8000e14:	d10a      	bne.n	8000e2c <__aeabi_ddiv+0x19c>
 8000e16:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000e1a:	f47f af34 	bne.w	8000c86 <__aeabi_dmul+0x24a>
 8000e1e:	ea95 0f0c 	teq	r5, ip
 8000e22:	f47f af25 	bne.w	8000c70 <__aeabi_dmul+0x234>
 8000e26:	4610      	mov	r0, r2
 8000e28:	4619      	mov	r1, r3
 8000e2a:	e72c      	b.n	8000c86 <__aeabi_dmul+0x24a>
 8000e2c:	ea95 0f0c 	teq	r5, ip
 8000e30:	d106      	bne.n	8000e40 <__aeabi_ddiv+0x1b0>
 8000e32:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000e36:	f43f aefd 	beq.w	8000c34 <__aeabi_dmul+0x1f8>
 8000e3a:	4610      	mov	r0, r2
 8000e3c:	4619      	mov	r1, r3
 8000e3e:	e722      	b.n	8000c86 <__aeabi_dmul+0x24a>
 8000e40:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000e44:	bf18      	it	ne
 8000e46:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000e4a:	f47f aec5 	bne.w	8000bd8 <__aeabi_dmul+0x19c>
 8000e4e:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000e52:	f47f af0d 	bne.w	8000c70 <__aeabi_dmul+0x234>
 8000e56:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000e5a:	f47f aeeb 	bne.w	8000c34 <__aeabi_dmul+0x1f8>
 8000e5e:	e712      	b.n	8000c86 <__aeabi_dmul+0x24a>

08000e60 <__aeabi_d2iz>:
 8000e60:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000e64:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000e68:	d215      	bcs.n	8000e96 <__aeabi_d2iz+0x36>
 8000e6a:	d511      	bpl.n	8000e90 <__aeabi_d2iz+0x30>
 8000e6c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000e70:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000e74:	d912      	bls.n	8000e9c <__aeabi_d2iz+0x3c>
 8000e76:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000e7a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000e7e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000e82:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000e86:	fa23 f002 	lsr.w	r0, r3, r2
 8000e8a:	bf18      	it	ne
 8000e8c:	4240      	negne	r0, r0
 8000e8e:	4770      	bx	lr
 8000e90:	f04f 0000 	mov.w	r0, #0
 8000e94:	4770      	bx	lr
 8000e96:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000e9a:	d105      	bne.n	8000ea8 <__aeabi_d2iz+0x48>
 8000e9c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ea0:	bf08      	it	eq
 8000ea2:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000ea6:	4770      	bx	lr
 8000ea8:	f04f 0000 	mov.w	r0, #0
 8000eac:	4770      	bx	lr
 8000eae:	bf00      	nop

08000eb0 <atexit>:
 8000eb0:	4601      	mov	r1, r0
 8000eb2:	2000      	movs	r0, #0
 8000eb4:	4602      	mov	r2, r0
 8000eb6:	4603      	mov	r3, r0
 8000eb8:	f000 b838 	b.w	8000f2c <__register_exitproc>

08000ebc <exit>:
 8000ebc:	b508      	push	{r3, lr}
 8000ebe:	2100      	movs	r1, #0
 8000ec0:	4604      	mov	r4, r0
 8000ec2:	f000 f88f 	bl	8000fe4 <__call_exitprocs>
 8000ec6:	4b04      	ldr	r3, [pc, #16]	; (8000ed8 <exit+0x1c>)
 8000ec8:	6818      	ldr	r0, [r3, #0]
 8000eca:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8000ecc:	b103      	cbz	r3, 8000ed0 <exit+0x14>
 8000ece:	4798      	blx	r3
 8000ed0:	4620      	mov	r0, r4
 8000ed2:	f000 f907 	bl	80010e4 <_exit>
 8000ed6:	bf00      	nop
 8000ed8:	0800112c 	.word	0x0800112c

08000edc <__libc_init_array>:
 8000edc:	b570      	push	{r4, r5, r6, lr}
 8000ede:	4e0f      	ldr	r6, [pc, #60]	; (8000f1c <__libc_init_array+0x40>)
 8000ee0:	4d0f      	ldr	r5, [pc, #60]	; (8000f20 <__libc_init_array+0x44>)
 8000ee2:	1b76      	subs	r6, r6, r5
 8000ee4:	10b6      	asrs	r6, r6, #2
 8000ee6:	bf18      	it	ne
 8000ee8:	2400      	movne	r4, #0
 8000eea:	d005      	beq.n	8000ef8 <__libc_init_array+0x1c>
 8000eec:	3401      	adds	r4, #1
 8000eee:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ef2:	4798      	blx	r3
 8000ef4:	42a6      	cmp	r6, r4
 8000ef6:	d1f9      	bne.n	8000eec <__libc_init_array+0x10>
 8000ef8:	4e0a      	ldr	r6, [pc, #40]	; (8000f24 <__libc_init_array+0x48>)
 8000efa:	4d0b      	ldr	r5, [pc, #44]	; (8000f28 <__libc_init_array+0x4c>)
 8000efc:	1b76      	subs	r6, r6, r5
 8000efe:	f000 f917 	bl	8001130 <_init>
 8000f02:	10b6      	asrs	r6, r6, #2
 8000f04:	bf18      	it	ne
 8000f06:	2400      	movne	r4, #0
 8000f08:	d006      	beq.n	8000f18 <__libc_init_array+0x3c>
 8000f0a:	3401      	adds	r4, #1
 8000f0c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000f10:	4798      	blx	r3
 8000f12:	42a6      	cmp	r6, r4
 8000f14:	d1f9      	bne.n	8000f0a <__libc_init_array+0x2e>
 8000f16:	bd70      	pop	{r4, r5, r6, pc}
 8000f18:	bd70      	pop	{r4, r5, r6, pc}
 8000f1a:	bf00      	nop
 8000f1c:	08001148 	.word	0x08001148
 8000f20:	08001148 	.word	0x08001148
 8000f24:	08001150 	.word	0x08001150
 8000f28:	08001148 	.word	0x08001148

08000f2c <__register_exitproc>:
 8000f2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000f30:	4c25      	ldr	r4, [pc, #148]	; (8000fc8 <__register_exitproc+0x9c>)
 8000f32:	6825      	ldr	r5, [r4, #0]
 8000f34:	f8d5 4148 	ldr.w	r4, [r5, #328]	; 0x148
 8000f38:	4606      	mov	r6, r0
 8000f3a:	4688      	mov	r8, r1
 8000f3c:	4692      	mov	sl, r2
 8000f3e:	4699      	mov	r9, r3
 8000f40:	b3cc      	cbz	r4, 8000fb6 <__register_exitproc+0x8a>
 8000f42:	6860      	ldr	r0, [r4, #4]
 8000f44:	281f      	cmp	r0, #31
 8000f46:	dc18      	bgt.n	8000f7a <__register_exitproc+0x4e>
 8000f48:	1c43      	adds	r3, r0, #1
 8000f4a:	b17e      	cbz	r6, 8000f6c <__register_exitproc+0x40>
 8000f4c:	eb04 0580 	add.w	r5, r4, r0, lsl #2
 8000f50:	2101      	movs	r1, #1
 8000f52:	f8c5 a088 	str.w	sl, [r5, #136]	; 0x88
 8000f56:	f8d4 7188 	ldr.w	r7, [r4, #392]	; 0x188
 8000f5a:	fa01 f200 	lsl.w	r2, r1, r0
 8000f5e:	4317      	orrs	r7, r2
 8000f60:	2e02      	cmp	r6, #2
 8000f62:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
 8000f66:	f8c5 9108 	str.w	r9, [r5, #264]	; 0x108
 8000f6a:	d01e      	beq.n	8000faa <__register_exitproc+0x7e>
 8000f6c:	3002      	adds	r0, #2
 8000f6e:	6063      	str	r3, [r4, #4]
 8000f70:	f844 8020 	str.w	r8, [r4, r0, lsl #2]
 8000f74:	2000      	movs	r0, #0
 8000f76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f7a:	4b14      	ldr	r3, [pc, #80]	; (8000fcc <__register_exitproc+0xa0>)
 8000f7c:	b303      	cbz	r3, 8000fc0 <__register_exitproc+0x94>
 8000f7e:	f44f 70c8 	mov.w	r0, #400	; 0x190
 8000f82:	f3af 8000 	nop.w
 8000f86:	4604      	mov	r4, r0
 8000f88:	b1d0      	cbz	r0, 8000fc0 <__register_exitproc+0x94>
 8000f8a:	f8d5 3148 	ldr.w	r3, [r5, #328]	; 0x148
 8000f8e:	2700      	movs	r7, #0
 8000f90:	e880 0088 	stmia.w	r0, {r3, r7}
 8000f94:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
 8000f98:	4638      	mov	r0, r7
 8000f9a:	2301      	movs	r3, #1
 8000f9c:	f8c4 7188 	str.w	r7, [r4, #392]	; 0x188
 8000fa0:	f8c4 718c 	str.w	r7, [r4, #396]	; 0x18c
 8000fa4:	2e00      	cmp	r6, #0
 8000fa6:	d0e1      	beq.n	8000f6c <__register_exitproc+0x40>
 8000fa8:	e7d0      	b.n	8000f4c <__register_exitproc+0x20>
 8000faa:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
 8000fae:	430a      	orrs	r2, r1
 8000fb0:	f8c4 218c 	str.w	r2, [r4, #396]	; 0x18c
 8000fb4:	e7da      	b.n	8000f6c <__register_exitproc+0x40>
 8000fb6:	f505 74a6 	add.w	r4, r5, #332	; 0x14c
 8000fba:	f8c5 4148 	str.w	r4, [r5, #328]	; 0x148
 8000fbe:	e7c0      	b.n	8000f42 <__register_exitproc+0x16>
 8000fc0:	f04f 30ff 	mov.w	r0, #4294967295
 8000fc4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000fc8:	0800112c 	.word	0x0800112c
 8000fcc:	00000000 	.word	0x00000000

08000fd0 <register_fini>:
 8000fd0:	4b02      	ldr	r3, [pc, #8]	; (8000fdc <register_fini+0xc>)
 8000fd2:	b113      	cbz	r3, 8000fda <register_fini+0xa>
 8000fd4:	4802      	ldr	r0, [pc, #8]	; (8000fe0 <register_fini+0x10>)
 8000fd6:	f7ff bf6b 	b.w	8000eb0 <atexit>
 8000fda:	4770      	bx	lr
 8000fdc:	00000000 	.word	0x00000000
 8000fe0:	080010b9 	.word	0x080010b9

08000fe4 <__call_exitprocs>:
 8000fe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000fe8:	4b31      	ldr	r3, [pc, #196]	; (80010b0 <__call_exitprocs+0xcc>)
 8000fea:	b083      	sub	sp, #12
 8000fec:	681b      	ldr	r3, [r3, #0]
 8000fee:	9300      	str	r3, [sp, #0]
 8000ff0:	f503 73a4 	add.w	r3, r3, #328	; 0x148
 8000ff4:	4681      	mov	r9, r0
 8000ff6:	460e      	mov	r6, r1
 8000ff8:	9301      	str	r3, [sp, #4]
 8000ffa:	9b00      	ldr	r3, [sp, #0]
 8000ffc:	f8d3 7148 	ldr.w	r7, [r3, #328]	; 0x148
 8001000:	b327      	cbz	r7, 800104c <__call_exitprocs+0x68>
 8001002:	f8dd a004 	ldr.w	sl, [sp, #4]
 8001006:	687c      	ldr	r4, [r7, #4]
 8001008:	1e65      	subs	r5, r4, #1
 800100a:	d40e      	bmi.n	800102a <__call_exitprocs+0x46>
 800100c:	3401      	adds	r4, #1
 800100e:	eb07 0484 	add.w	r4, r7, r4, lsl #2
 8001012:	f04f 0800 	mov.w	r8, #0
 8001016:	b1e6      	cbz	r6, 8001052 <__call_exitprocs+0x6e>
 8001018:	f8d4 3100 	ldr.w	r3, [r4, #256]	; 0x100
 800101c:	42b3      	cmp	r3, r6
 800101e:	d018      	beq.n	8001052 <__call_exitprocs+0x6e>
 8001020:	3d01      	subs	r5, #1
 8001022:	1c6b      	adds	r3, r5, #1
 8001024:	f1a4 0404 	sub.w	r4, r4, #4
 8001028:	d1f5      	bne.n	8001016 <__call_exitprocs+0x32>
 800102a:	4b22      	ldr	r3, [pc, #136]	; (80010b4 <__call_exitprocs+0xd0>)
 800102c:	b173      	cbz	r3, 800104c <__call_exitprocs+0x68>
 800102e:	687b      	ldr	r3, [r7, #4]
 8001030:	2b00      	cmp	r3, #0
 8001032:	d136      	bne.n	80010a2 <__call_exitprocs+0xbe>
 8001034:	683b      	ldr	r3, [r7, #0]
 8001036:	2b00      	cmp	r3, #0
 8001038:	d034      	beq.n	80010a4 <__call_exitprocs+0xc0>
 800103a:	4638      	mov	r0, r7
 800103c:	f8ca 3000 	str.w	r3, [sl]
 8001040:	f3af 8000 	nop.w
 8001044:	f8da 7000 	ldr.w	r7, [sl]
 8001048:	2f00      	cmp	r7, #0
 800104a:	d1dc      	bne.n	8001006 <__call_exitprocs+0x22>
 800104c:	b003      	add	sp, #12
 800104e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001052:	687b      	ldr	r3, [r7, #4]
 8001054:	6822      	ldr	r2, [r4, #0]
 8001056:	3b01      	subs	r3, #1
 8001058:	42ab      	cmp	r3, r5
 800105a:	bf0c      	ite	eq
 800105c:	607d      	streq	r5, [r7, #4]
 800105e:	f8c4 8000 	strne.w	r8, [r4]
 8001062:	2a00      	cmp	r2, #0
 8001064:	d0dc      	beq.n	8001020 <__call_exitprocs+0x3c>
 8001066:	f8d7 3188 	ldr.w	r3, [r7, #392]	; 0x188
 800106a:	f8d7 b004 	ldr.w	fp, [r7, #4]
 800106e:	2101      	movs	r1, #1
 8001070:	40a9      	lsls	r1, r5
 8001072:	4219      	tst	r1, r3
 8001074:	d108      	bne.n	8001088 <__call_exitprocs+0xa4>
 8001076:	4790      	blx	r2
 8001078:	687b      	ldr	r3, [r7, #4]
 800107a:	455b      	cmp	r3, fp
 800107c:	d1bd      	bne.n	8000ffa <__call_exitprocs+0x16>
 800107e:	f8da 3000 	ldr.w	r3, [sl]
 8001082:	42bb      	cmp	r3, r7
 8001084:	d0cc      	beq.n	8001020 <__call_exitprocs+0x3c>
 8001086:	e7b8      	b.n	8000ffa <__call_exitprocs+0x16>
 8001088:	f8d7 318c 	ldr.w	r3, [r7, #396]	; 0x18c
 800108c:	4219      	tst	r1, r3
 800108e:	d104      	bne.n	800109a <__call_exitprocs+0xb6>
 8001090:	4648      	mov	r0, r9
 8001092:	f8d4 1080 	ldr.w	r1, [r4, #128]	; 0x80
 8001096:	4790      	blx	r2
 8001098:	e7ee      	b.n	8001078 <__call_exitprocs+0x94>
 800109a:	f8d4 0080 	ldr.w	r0, [r4, #128]	; 0x80
 800109e:	4790      	blx	r2
 80010a0:	e7ea      	b.n	8001078 <__call_exitprocs+0x94>
 80010a2:	683b      	ldr	r3, [r7, #0]
 80010a4:	46ba      	mov	sl, r7
 80010a6:	461f      	mov	r7, r3
 80010a8:	2f00      	cmp	r7, #0
 80010aa:	d1ac      	bne.n	8001006 <__call_exitprocs+0x22>
 80010ac:	e7ce      	b.n	800104c <__call_exitprocs+0x68>
 80010ae:	bf00      	nop
 80010b0:	0800112c 	.word	0x0800112c
 80010b4:	00000000 	.word	0x00000000

080010b8 <__libc_fini_array>:
 80010b8:	b538      	push	{r3, r4, r5, lr}
 80010ba:	4b08      	ldr	r3, [pc, #32]	; (80010dc <__libc_fini_array+0x24>)
 80010bc:	4d08      	ldr	r5, [pc, #32]	; (80010e0 <__libc_fini_array+0x28>)
 80010be:	1aed      	subs	r5, r5, r3
 80010c0:	10ac      	asrs	r4, r5, #2
 80010c2:	bf18      	it	ne
 80010c4:	18ed      	addne	r5, r5, r3
 80010c6:	d005      	beq.n	80010d4 <__libc_fini_array+0x1c>
 80010c8:	3c01      	subs	r4, #1
 80010ca:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 80010ce:	4798      	blx	r3
 80010d0:	2c00      	cmp	r4, #0
 80010d2:	d1f9      	bne.n	80010c8 <__libc_fini_array+0x10>
 80010d4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80010d8:	f000 b830 	b.w	800113c <_fini>
 80010dc:	08001150 	.word	0x08001150
 80010e0:	08001154 	.word	0x08001154

080010e4 <_exit>:
 80010e4:	e7fe      	b.n	80010e4 <_exit>
 80010e6:	bf00      	nop
 80010e8:	00000040 	.word	0x00000040
 80010ec:	00000079 	.word	0x00000079
 80010f0:	00000024 	.word	0x00000024
 80010f4:	00000030 	.word	0x00000030
 80010f8:	00000019 	.word	0x00000019
 80010fc:	00000012 	.word	0x00000012
 8001100:	00000002 	.word	0x00000002
 8001104:	00000078 	.word	0x00000078
 8001108:	00000000 	.word	0x00000000
 800110c:	00000010 	.word	0x00000010
 8001110:	00000008 	.word	0x00000008
 8001114:	00000003 	.word	0x00000003
 8001118:	00000046 	.word	0x00000046
 800111c:	00000021 	.word	0x00000021
 8001120:	00000006 	.word	0x00000006
 8001124:	0000000e 	.word	0x0000000e
 8001128:	00000043 	.word	0x00000043

0800112c <_global_impure_ptr>:
 800112c:	20000010                                ... 

08001130 <_init>:
 8001130:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001132:	bf00      	nop
 8001134:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001136:	bc08      	pop	{r3}
 8001138:	469e      	mov	lr, r3
 800113a:	4770      	bx	lr

0800113c <_fini>:
 800113c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800113e:	bf00      	nop
 8001140:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001142:	bc08      	pop	{r3}
 8001144:	469e      	mov	lr, r3
 8001146:	4770      	bx	lr
