   1              	# file: gpio_d.s
   2              	# author: Tyler French
   3              	
   4              	.include "macros.inc"
   1              	# file: macros.inc
   2              	
  34              	  .list
   5              	.include "src/gpio_regs.inc"
   1              	# file: gpio_regs.inc
   2              	
   3              		.equ GPIOA_BASE, 0x40020000
   4              		.equ GPIOB_BASE, 0x40020400
   5              		.equ GPIOC_BASE, 0x40020800
   6              		.equ GPIOD_BASE, 0x40020c00
   7              		.equ GPIOE_BASE, 0x40021000
   8              	
   9              		.equ GPIO_MODER, 0x00
  10              		.equ GPIO_OTYPER, 0x04
  11              		.equ GPIO_OSPEEDR, 0x08
  12              		.equ GPIO_PUPDR, 0x0c
  13              		.equ GPIO_IDR, 0x10
  14              		.equ GPIO_ODR, 0x14
  15              		.equ GPIO_BSRR, 0x18
  16              		.equ GPIO_LCKR, 0x1c
  17              		.equ GPIO_AFRL, 0x20
  18              		.equ GPIO_AFRH, 0x24
  19              	
  20              	
   6              	
   7              	  SET_TARGET
   8              	
   9              	  .text
  10              	
  11              	  FUNCTION gpio_d_init,global
  12              	
  13 0000 00B5     	    push {lr}
  14              	
  15 0002 4FF00300 			mov r0,#3										//send 3 as arg to rcc function
  16 0006 FFF7FEFF 			bl rcc_gpio_enable					//call rcc function
  17              	
  18 000a 064B     			ldr r3, =#GPIOD_BASE				//load r3 with the base address of PORT D
  19              	
  20 000c 064A     			ldr r2, =#0x00000000				//load 0 into r2
  21 000e DA60     			str r2,[r3,#GPIO_PUPDR]			//write Port D PUPDR register as no pull-up, no pull-down
  22 0010 5A60     			str r2,[r3,#GPIO_OTYPER]		//write Port D OTYPER register as reset state
  23 0012 5A61     			str r2,[r3,#GPIO_ODR]				//write 0 to GPIO Port D output data register
  24              	
  25 0014 054A     			ldr r2,=#0x55555555					//set all 16 bits of Port D to outputs
  26 0016 1A60     			str r2,[r3,#GPIO_MODER]
  27              	
  28 0018 054A     			ldr r2,=#0xffffffff					//load all ones into r2
  29 001a 9A60     			str r2,[r3,#GPIO_OSPEEDR]		//set Port D SPEEDR register as high speed
  30              	
  31 001c 5DF804EB 			pop {lr}
  32              	
  33 0020 7047     	    bx lr
  34              	  
  35 0022 0000000C 	  ENDFUNC gpio_d_init
  35      02400000 
  35      00005555 
  35      5555FFFF 
  35      FFFF
  36              	
  37              	  FUNCTION gpio_d_put,global
  38              	
  39 0034 00B5     			push {lr}
  40              	
  41 0036 024B     			ldr r3, =#GPIOD_BASE		//load r3 with the base address of Port D
  42              	
  43 0038 5861     			str r0,[r3,#GPIO_ODR]		//write r0 to GPIO Port D output
  44              	
  45 003a 5DF804EB 			pop {lr}
  46              	
  47 003e 7047     			bx lr
  48              	
  49 0040 000C0240 		ENDFUNC gpio_d_put
  50              	
  51              	  .end
DEFINED SYMBOLS
                            *ABS*:00000001 ctxm4
 ./src/gpio_regs.inc:3      *ABS*:40020000 GPIOA_BASE
 ./src/gpio_regs.inc:4      *ABS*:40020400 GPIOB_BASE
 ./src/gpio_regs.inc:5      *ABS*:40020800 GPIOC_BASE
 ./src/gpio_regs.inc:6      *ABS*:40020c00 GPIOD_BASE
 ./src/gpio_regs.inc:7      *ABS*:40021000 GPIOE_BASE
 ./src/gpio_regs.inc:9      *ABS*:00000000 GPIO_MODER
 ./src/gpio_regs.inc:10     *ABS*:00000004 GPIO_OTYPER
 ./src/gpio_regs.inc:11     *ABS*:00000008 GPIO_OSPEEDR
 ./src/gpio_regs.inc:12     *ABS*:0000000c GPIO_PUPDR
 ./src/gpio_regs.inc:13     *ABS*:00000010 GPIO_IDR
 ./src/gpio_regs.inc:14     *ABS*:00000014 GPIO_ODR
 ./src/gpio_regs.inc:15     *ABS*:00000018 GPIO_BSRR
 ./src/gpio_regs.inc:16     *ABS*:0000001c GPIO_LCKR
 ./src/gpio_regs.inc:17     *ABS*:00000020 GPIO_AFRL
 ./src/gpio_regs.inc:18     *ABS*:00000024 GPIO_AFRH
        src/gpio_d.s:11     .text:00000000 gpio_d_init
        src/gpio_d.s:11     .text:00000000 $t
        src/gpio_d.s:35     .text:00000022 $d
        src/gpio_d.s:37     .text:00000034 gpio_d_put
        src/gpio_d.s:37     .text:00000034 $t
        src/gpio_d.s:49     .text:00000040 $d
                   .debug_aranges:0000000c $d

UNDEFINED SYMBOLS
rcc_gpio_enable
