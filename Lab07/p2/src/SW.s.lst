   1              	# file: SW.s
   2              	# author: Justin Johnson, Tyler French
   3              	# team w4
   4              	
   5              	.include "macros.inc"
   1              	# file: macros.inc
   2              	
  34              	  .list
   6              	.include "src/gpio_regs.inc"
   1              	# file: gpio_regs.inc
   2              	
   3              		.equ GPIOA_BASE, 0x40020000
   4              		.equ GPIOB_BASE, 0x40020400
   5              		.equ GPIOC_BASE, 0x40020800
   6              		.equ GPIOD_BASE, 0x40020c00
   7              		.equ GPIOE_BASE, 0x40021000
   8              	
   9              		.equ GPIO_MODER, 0x00
  10              		.equ GPIO_OTYPER, 0x04
  11              		.equ GPIO_OSPEEDR, 0x08
  12              		.equ GPIO_PUPDR, 0x0c
  13              		.equ GPIO_IDR, 0x10
  14              		.equ GPIO_ODR, 0x14
  15              		.equ GPIO_BSRR, 0x18
  16              		.equ GPIO_LCKR, 0x1c
  17              		.equ GPIO_AFRL, 0x20
  18              		.equ GPIO_AFRH, 0x24
  19              	
  20              	
   7              	
   8              	  SET_TARGET
   9              	
  10              	  .text
  11              	
  12              	  FUNCTION SW_Init,global
  13              	
  14 0000 00B5     	    push {lr}
  15              	
  16 0002 FFF7FEFF 	    bl gpio_c_init              //initialize GPIO port A as input
  17              	
  18 0006 5DF804EB 	    pop {lr}
  19              	
  20 000a 7047     	    bx lr
  21              	  
  22              	  ENDFUNC SW_Init
  23              	
  24              	  FUNCTION SW_Get_A,global
  25              	
  26 000c 00B5     	    push {lr}
  27              	
  28 000e FFF7FEFF 	    bl gpio_c_get               //get all 32 bits of port A
  29              	
  30 0012 4FEAD000 	    lsr r0,#3                   //normalize bit 3
  31              	
  32 0016 0349     	    ldr r1,=#0x1             //create mask for bit 3
  33              	
  34 0018 00EA0100 	    and r0,r1                   //apply mask
  35              	
  36 001c 5DF804EB 	    pop {lr}
  37              	
  38 0020 7047     	    bx lr
  39              	
  40 0022 00000100 	  ENDFUNC SW_Get_A
  40      0000
  41              	
  42              	  FUNCTION SW_Get_B,global
  43              	
  44 0028 00B5     	    push {lr}
  45              	
  46 002a FFF7FEFF 	    bl gpio_c_get           //get all 32 bits of input
  47 002e 4FEA1020 	    lsr r0,#8
  48 0032 0349     	    ldr r1,=#(~(~0<<4))     //create mask for bits
  49 0034 00EA0100 	    and r0,r1               //islolate bits [11:8]
  50              	
  51 0038 5DF804EB 	    pop {lr}
  52              	
  53 003c 7047     	    bx lr
  54              	
  55 003e 00000F00 	  ENDFUNC SW_Get_B
  55      0000
  56              	
  57              	
  58              	  
  59              	  .end
DEFINED SYMBOLS
                            *ABS*:00000001 ctxm4
 ./src/gpio_regs.inc:3      *ABS*:40020000 GPIOA_BASE
 ./src/gpio_regs.inc:4      *ABS*:40020400 GPIOB_BASE
 ./src/gpio_regs.inc:5      *ABS*:40020800 GPIOC_BASE
 ./src/gpio_regs.inc:6      *ABS*:40020c00 GPIOD_BASE
 ./src/gpio_regs.inc:7      *ABS*:40021000 GPIOE_BASE
 ./src/gpio_regs.inc:9      *ABS*:00000000 GPIO_MODER
 ./src/gpio_regs.inc:10     *ABS*:00000004 GPIO_OTYPER
 ./src/gpio_regs.inc:11     *ABS*:00000008 GPIO_OSPEEDR
 ./src/gpio_regs.inc:12     *ABS*:0000000c GPIO_PUPDR
 ./src/gpio_regs.inc:13     *ABS*:00000010 GPIO_IDR
 ./src/gpio_regs.inc:14     *ABS*:00000014 GPIO_ODR
 ./src/gpio_regs.inc:15     *ABS*:00000018 GPIO_BSRR
 ./src/gpio_regs.inc:16     *ABS*:0000001c GPIO_LCKR
 ./src/gpio_regs.inc:17     *ABS*:00000020 GPIO_AFRL
 ./src/gpio_regs.inc:18     *ABS*:00000024 GPIO_AFRH
            src/SW.s:12     .text:00000000 SW_Init
            src/SW.s:12     .text:00000000 $t
            src/SW.s:24     .text:0000000c SW_Get_A
            src/SW.s:40     .text:00000022 $d
            src/SW.s:42     .text:00000028 SW_Get_B
            src/SW.s:42     .text:00000028 $t
            src/SW.s:55     .text:0000003e $d
                   .debug_aranges:0000000c $d

UNDEFINED SYMBOLS
gpio_c_init
gpio_c_get
